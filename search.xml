<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>考研记录(三) 概率论与数理统计</title>
      <link href="/kao-yan/2019/09/25/kao-yan-ji-lu-san-gai-lu-lun-yu-shu-li-tong-ji/kao-yan-ji-lu-san-gai-lu-lun-yu-shu-li-tong-ji.html"/>
      <url>/kao-yan/2019/09/25/kao-yan-ji-lu-san-gai-lu-lun-yu-shu-li-tong-ji/kao-yan-ji-lu-san-gai-lu-lun-yu-shu-li-tong-ji.html</url>
      
        <content type="html"><![CDATA[<h1 id="概率论与数理统计😄"><a href="#概率论与数理统计😄" class="headerlink" title="概率论与数理统计😄"></a><strong>概率论与数理统计😄</strong></h1><ul><li><p><strong>如果 $X, Y$ 独立</strong>，那么 <script type="math/tex">f(x,y)=f_X(x) \cdot f_Y(y)</script></p></li><li><p><strong>如果$(X,Y) \backsim f\big(x)$，</strong></p><ul><li><p>$Z=X+Y$ 的<strong>概率密度:</strong></p><script type="math/tex; mode=display">f_z(z)={\int_{-\infty}^{+\infty} f(x,z-x)dx}\space=\space {\int_{-\infty}^{+\infty} f(z-y,y)dx}</script></li><li><p>$Z=X-Y$ 的<strong>概率密度:</strong></p><script type="math/tex; mode=display">f_z(z)={\int_{-\infty}^{+\infty} f(x,\  x-z)dx} \space=\space {\int_{-\infty}^{+\infty} f(y+z,y)dx}</script></li><li><p>$Z=XY$ 的<strong>概率密度:</strong></p><script type="math/tex; mode=display">f_z(z)=\int_{-\infty}^{+\infty} \cfrac{1}{\lvert x \rvert}f(x,\cfrac{z}{x})dx=\int_{-\infty}^{+\infty} \cfrac{1}{\lvert y \rvert}f(\cfrac{z}{y},y)dy</script></li><li><p>$Z=\cfrac{X}{Y}$ 的<strong>概率密度:</strong></p><script type="math/tex; mode=display">f_z(z) \space=\space {\int_{-\infty}^{+\infty}} \lvert y \rvert f(yz,y)dy</script></li><li><p>$Z=\max{X,Y}$ 的<strong>概率密度:</strong></p><script type="math/tex; mode=display">\begin{align}F_{max}(z)&=P\{\max\{X,Y\} \leqslant z\} = P\{X \leqslant z, Y \leqslant z\} \space=\space F(z,z) \\f_z(z)&=F_{max}(z)\end{align}</script></li><li><p>$Z=\min{X,Y}$ 的<strong>概率密度:</strong></p><script type="math/tex; mode=display">\begin{align}  F_{min}(z)&=P\{\min\{X,Y\} \leqslant z\} \\  &=P\{\lbrace X \leqslant z \rbrace \cup \{ Y \leqslant z \rbrace\} \\  &=F_X(z)+F_Y(z)-F_{XY}(z,z)\end{align}</script></li></ul></li><li><p><strong>大数定律和中心极限定理</strong></p><ul><li><p><strong>切比雪夫大数定律</strong><br>$X_1,X_2,X_3\dots X_n$ 是独立同分布的随机变量序列， 如果方差 $DX_i(i \geqslant 1)$ 且存在上界，即存在常数 C ，<br>使 $DX_i \leqslant C$ 对于一切 $i \geqslant 1$ 均成立， 则 ${X_n}$ 服从大数定律：</p><script type="math/tex; mode=display">\cfrac{1}{n}\sum_{i=1}^n X_i \xrightarrow{P} \cfrac{1}{n} \sum_{i=1}^n EX_i</script></li><li><p><strong>伯努利大数定律</strong><br>假设 $\mu_n$ 是 <code>n</code> 重伯努利试验中事件 <code>A</code> 发生的次数，在每次试验中事件<br><code>A</code> 发生的概率为 $\mathcal{p}(0<p<1)$，则 $\cfrac{\mu_n}{n}="" \xrightarrow{p}p$，即对任意="" $\varepsilon=""> 0$，有</p<1)$，则></p><script type="math/tex; mode=display">\lim_{n \rightarrow \infty}{P\biggl\{ \biggl\lvert\space \cfrac{\mu_n}{n} - \mathcal{p} \space\biggl\lvert <\varepsilon \biggl\} = 1}</script></li><li><p><strong>辛钦大数定律</strong><br>假设${X<em>n$ 是独立同分布的随机变量序列，如果 $EX_i = \mu(i=1,2,\dots)$ 存在，<br>则 $\displaystyle \cfrac{1}{n}\sum</em>{i=1}^n X_i \xrightarrow{P} \mu$， 即对任意 $\varepsilon &gt; 0$，有</p><script type="math/tex; mode=display">\lim \biggl{\{} \biggl\lvert \cfrac{1}{n} \sum_{i=1}^n X_i - \mu \biggl\lvert < \varepsilon \biggl\} = 1</script></li><li><p><strong>独立同分布中心定理</strong><br>假设 ${X_n}$ 是独立同分布的随机变量序列，如果 $EX_i=\mu, DX_i=\sigma^2 &gt; 0(i=1,2,3,\dots$ 存在，则 ${X_n}$ 服从中心极限定理，即对任意的实数 $x$, 有</p><script type="math/tex; mode=display">\lim_{n\rightarrow\infty}P\Biggl\{\cfrac{\sum_{i=1}^n X_i - n \cdot \mu}{\sqrt{n}\cdot \sigma} \leqslant x \Biggl\}={\cfrac{1}{\sqrt{2\pi}} \int_{-\infty}^x e^{-0.5t^2}dt} = \mathcal{\Phi}(x)</script></li><li><strong>棣莫弗-拉普拉斯定理</strong><br>假设随机变量 $Y_n \backsim B(n,p)(0&lt;p&lt;1,n\geqslant 1)$，则对任意的实数 $x$，有<script type="math/tex; mode=display">\lim_{n\rightarrow\infty}\Biggl\{\cfrac{Y_n-np}{\sqrt{np(1-p)}}\leqslant x\Biggl\}=\cfrac{1}{\sqrt{2\pi}}\int_{-\infty}^x e^{-0.5t^2}dt=\Phi(x)</script></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>UCOS-III移植到STM32F103C8T6</title>
      <link href="/embedded/2019/09/23/ucos-iii-yi-zhi-dao-stm32f103c8t6/ucos-iii-yi-zhi-dao-stm32f103c8t6.html"/>
      <url>/embedded/2019/09/23/ucos-iii-yi-zhi-dao-stm32f103c8t6/ucos-iii-yi-zhi-dao-stm32f103c8t6.html</url>
      
        <content type="html"><![CDATA[<h1 id="UCOS-III与STM32F103C8T6的融合"><a href="#UCOS-III与STM32F103C8T6的融合" class="headerlink" title="UCOS-III与STM32F103C8T6的融合"></a><strong>UCOS-III与STM32F103C8T6的融合</strong></h1><p>前些天学校开设了一门实验课，让我对UCOS有了一些了解，不过，实验使用的是飞思卡尔的MC9X128XS的开发板，系统使用的是UCOS-II，实验课结束后，我就寻思着将UCOS移植到我手头的F103C8核心板，上网查看了一波后，发现UCOS-II有点老了，1998年的产品，本着用新不用旧的态度，选择了<strong>UCOS-III</strong>，这是2009年出来的，目前最新版本是V3.07.03，不过这是我后来知道的，我是移植完成才写的这篇博客，我移植的是<strong>V3.03.01</strong>，移植过程中找资料才发现还有V3.07.03，但是懒得换了，看更新说明变换还挺大。不过V3.03.01也够了，F103资源本来就不多。</p><p>移植教程网上一大堆，但几乎都是基于标准库的，我个人是不用标准库的，但变化不是很大，主要就是系统时钟初始化有区别，还有就是启动文件不一样，HAL库附带的启动文件更简洁一些。</p><p>使用HAL库就不得不提及几个工具，<a href="https://www.st.com/zh/development-tools/stm32cubemx.html" target="_blank" rel="noopener">STM32CubeMX</a>是ST推出的一个代码生成工具，这个软件使用图形化界面配置，包括系统时钟，外设(ADC,SPI,IIC,UART,TIM,EXIT等等)，还可以加入软件包，比如加入FATFS以支持文件系统，FREEOS实时操作系统，USB FS。配置完成，就可以生成工程模板，用相应的IDE打开就行了。支持KEIL，IAR TRUESTUDIO，Make等等一些主流IDE。</p><p>但是更新到V5版本之后，ST推出了一个大杀器<a href="https://www.st.com/zh/development-tools/stm32cubeide.html" target="_blank" rel="noopener">STM32CubeIDE</a>,这个软件集成了STM32CubeMX，Eclipse，stlink，jlink，如果你用过stm32F系列芯片，就知道这意味着什么。秒天秒地的存在啊。</p><p>本次移植也是基于STM32CubeIDE的。所以开始之前，请确保你有STM32CubeIDE，或者keil也可以，不过麻烦一点，或者你熟悉的一款IDE，但是你知道相应操作可以实现同样的效果就可以了。</p><p><strong>说明一下</strong></p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>软件</strong></th><th style="text-align:center"><strong>版本</strong></th></tr></thead><tbody><tr><td style="text-align:center"><strong>STM32CubeIDE</strong></td><td style="text-align:center">V1.0.2</td></tr><tr><td style="text-align:center"><strong>HAL库</strong></td><td style="text-align:center">V1.8.0</td></tr><tr><td style="text-align:center"><strong>UCOS-III</strong></td><td style="text-align:center">v3.03.01</td></tr></tbody></table></div><p>以下就是移植步骤：<br><strong>！！！！移植之前建议看一下《野火-UCOS-III内核实现与应用开发实战-基于STM32》</strong> 了解一下UCOS-III</p><ol><li>使用STM32CubeIDE创建一个裸板工程，点亮一个LED即可。具体操作不再赘述。</li><li>从<strong>micrium</strong>官网的下载中心-&gt;<a href="https://www.micrium.com/downloadcenter/download-results/?searchterm=hm-stmicroelectronics&amp;supported=true" target="_blank" rel="noopener">STMicroelectronics</a>下载一个例程<a href="https://www.micrium.com/download/micrium_uc-eval-stm32f107_ucos-iii/" target="_blank" rel="noopener">Micrium_uC-Eval-STM32F107_uCOS-III</a>，下载需要注册。</li><li><p>打开例程文件夹  <code>ucOS\Micrium_uC-Eval-STM32F107_uCOS-III\Micrium\Software</code> ，应该是以下结构的：<br><img src="https://i.loli.net/2019/09/23/1k9VPQ2t5w46LWz.png" alt="">   </p><p> 返回到 <code>ucOS\Micrium_uC-Eval-STM32F107_uCOS-III</code> ,将整个 <code>Software</code> 复制到 项目的根目录下，复制完成后，在CubeIDE里应该是这样的目录结构：<br><img src="https://i.loli.net/2019/09/23/cxEhuqp5MDKm1QH.png" alt=""></p></li><li><p>设置源文件夹，打开项目属性对话框，添加完成后：<br><img src="https://i.loli.net/2019/09/23/wqujJImUkLDOoGs.png" alt="">    </p><p> 设置 <code>include</code> 路径，设置完成后如下图：</p><p> <img src="https://i.loli.net/2019/09/23/UZDCIH1LGqvKNk3.png" alt=""></p></li></ol><ol><li><p>添加文件到 <code>Src</code> 文件夹。</p><ul><li><p>打开 <code>\Micrium\Software\EvalBoards\Micrium\uC-Eval-STM32F107\uCOS-III</code> 目录，将以下文件复制到 <code>Src</code> </p><p><img src="https://i.loli.net/2019/09/23/Ea1sBfiFGDbWhNg.png" alt=""></p></li></ul></li><li><p>修改文件。</p><ul><li>修改 <code>includes.h</code>。 删除 <code>stm32f1xx_lib.h</code>， 添加 <code>stm32f1xx_hal.h</code> 和 <code>void         Error_Handler               (void);</code>。</li><li>修改启动文件 <code>startup_stm32f103c8tx.s</code>。将 <code>PendSV_Handler</code> 替换成<code>OS_CPU_PendSVHandler</code>，有三处要替换， <code>SysTick_Handler</code> 替换 <code>OS_CPU_SysTickHandler</code>， 也有三处要替换。<br><img src="https://i.loli.net/2019/09/23/CSRcF8ErKwQkLyP.png" alt="一"><br><img src="https://i.loli.net/2019/09/23/MBLfqDOkXVr9RFx.png" alt="二"></li><li><p>修改 <code>os_app_hooks.c</code>。在 <code>void  App_OS_TimeTickHook (void)</code> 添加 <code>HAL_IncTick();</code>。  </p><pre class="line-numbers language-lang-c"><code class="language-lang-c">void  App_OS_TimeTickHook (void){HAL_IncTick();}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>修改 <code>bsp.c</code>。与 <code>BSP</code> 相关的代码都可以注释掉，只保留与 <code>DWT</code> 相关的。</li><li>修改 <code>aap.c</code>。将 <code>main.c</code> 关于 <code>void SystemClock_Config(void)</code> 的声明和定义复制到 <code>app.c</code> ;之后就可以删除 <code>main.c</code> 和 <code>main.h</code>。接下来开始修改初始化系统和硬件的代码了，容易踩坑也是这里。cubeIEDE生成的代码里，一开始就调用了 <code>HAL_Init()</code>，在这个函数中，调用了 <code>HAL_InitTick()</code>, 这个函数就是坑，原因在于这个函数初始化了Systemtick 也就是所说的滴答时钟，一旦初始化完成，滴答时钟就开始运行，产生定时中断，而这个中断被UCOS接管了(<code>OS_CPU_SysTickHandler()</code>)，这个函数体：</li></ul><pre class="line-numbers language-lang-c"><code class="language-lang-c">void  OS_CPU_SysTickHandler (void){CPU_SR_ALLOC();CPU_CRITICAL_ENTER();OSIntNestingCtr++;  /* Tell uC/OS-III that we are starting an ISR  */CPU_CRITICAL_EXIT();OSTimeTick(); /* Call  uC/OS-III's OSTimeTick()    */OSIntExit(); /* Tell uC/OS-III that we are leaving the ISR  */}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>可以看到,这个函数对 <code>OSIntNestingCtr</code> 进行了 <code>++</code> 操作，而在 <code>OSInit()</code> 函数里调用了 <code>OS_IdleTaskInit()</code>，<code>OS_IdleTaskInit()</code>函数调用 <code>OSTaskCreate()</code> 创建一个空闲任务，而在 <code>OSTaskCreate()</code> 里有这样的语句：</p><pre class="line-numbers language-lang-c"><code class="language-lang-c">  #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u  if (OSIntNestingCtr > (OS_NESTING_CTR)0) {  /*  ---------- CANNOT CREATE A TASK FROM AN ISR ---------- */    *p_err = OS_ERR_TASK_CREATE_ISR;     return;  }  #endif<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明显的 <code>OSIntNestingCtr</code> 大于 <code>0</code>,所以 <code>OSInit()</code>会失败。解决办法有两个(我采用第一种)：</p><ul><li>注释掉 <code>HAL_Init()</code> 里面的 <code>HAL_InitTick()</code></li><li>先调用 <code>OSInit()</code> 后调用 <code>HAL_Init()</code>   </li></ul><p>void SystemClock_Config(void)这个函数最终会初始化SystemTick，所以 <code>void  OS_CPU_SysTickInit (CPU_INT32U  cnts)</code> 可以不用调用。<br>最终初始化程序为：</p><pre class="line-numbers language-lang-c"><code class="language-lang-c"> int  main (void){  OS_ERR  err;  HAL_Init();  OSInit(&err);  /* Init uC/OS-III.  */  OSTaskCreate((OS_TCB     *)&AppTaskStartTCB,  /* Create the start task*/              (CPU_CHAR   *)"App Task Start",              (OS_TASK_PTR ) AppTaskStart,              (void       *) 0,              (OS_PRIO     ) APP_TASK_START_PRIO,              (CPU_STK    *)&AppTaskStartStk[0],              (CPU_STK_SIZE) APP_TASK_START_STK_SIZE / 10,              (CPU_STK_SIZE) APP_TASK_START_STK_SIZE,              (OS_MSG_QTY  ) 5u,              (OS_TICK     ) 0u,              (void       *) 0,              (OS_OPT      )(OS_OPT_TASK_STK_CHK | OS_OPT_TASK_STK_CLR),              (OS_ERR     *)&err);  OSStart(&err);   /* Start multitasking (i.e. give control to uC/OS-III). */  for(;;){} }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <code>static  void  AppTaskStart (void *p_arg)</code></p><pre class="line-numbers language-lang-c"><code class="language-lang-c"> static  void  AppTaskStart (void *p_arg){  // CPU_INT32U  cpu_clk_freq;  //CPU_INT32U  cnts;  OS_ERR      err;  (void)p_arg;  SystemClock_Config();  HAL_NVIC_EnableIRQ(SysTick_IRQn);  LED_Init();  CPU_Init();  //    cpu_clk_freq = HAL_RCC_GetHCLKFreq();  /* Determine SysTick reference freq.  */  //    cnts = cpu_clk_freq / (CPU_INT32U)OSCfg_TickRate_Hz;  /* Determine nbr SysTick increments    */  //    OS_CPU_SysTickInit(cnts);     /* Init uC/OS periodic time src (SysTick).   */  Mem_Init(); /* Initialize Memory Management Module  */  #if OS_CFG_STAT_TASK_EN > 0u   OSStatTaskCPUUsageInit(&err);   /* Compute CPU capacity with no task running */  #endif  CPU_IntDisMeasMaxCurReset();  #if (APP_CFG_SERIAL_EN == DEF_ENABLED)  //    BSP_Ser_Init(115200);     /* Enable Serial Interface   */  #endif  AppTaskCreate(); /* Create Application Tasks   */  AppObjCreate();   /* Create Application Objects    */  while(DEF_TRUE) {  /* Task body, always written as an infinite loop. */  HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);  //OSTimeDly(100, OS_OPT_TIME_DLY, &err);  OSTimeDlyHMSM(0, 0, 0, 100, OS_OPT_TIME_HMSM_STRICT, &err);  } }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至此，移植完成。<br>附上<br><a href="https://yadi.sk/d/q0Ti2v8Bakqd9w" target="_blank" rel="noopener">项目文件</a></p></li></ol><p>根据上面的步骤，添加 <code>TIM4</code> 作为 <code>HAL</code> 库的超时检测机制<br><a href="https://yadi.sk/d/Z5YqxCM6BbwHZQ" target="_blank" rel="noopener">项目文件</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Embedded </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STM32 </tag>
            
            <tag> UCOS-III </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考研记录(二) 高等数学</title>
      <link href="/kao-yan/2019/09/22/kao-yan-ji-lu-er-gao-deng-shu-xue/kao-yan-ji-lu-er-gao-deng-shu-xue.html"/>
      <url>/kao-yan/2019/09/22/kao-yan-ji-lu-er-gao-deng-shu-xue/kao-yan-ji-lu-er-gao-deng-shu-xue.html</url>
      
        <content type="html"><![CDATA[<h1 id="2020-考研数学-张宇"><a href="#2020-考研数学-张宇" class="headerlink" title="2020 考研数学 张宇"></a>2020 考研数学 张宇</h1><p><img src="https://i.loli.net/2019/09/22/qBsfoAv7cm91YKb.jpg" height="315" width="560"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>考研记录(一) 开始</title>
      <link href="/kao-yan/2019/09/22/kao-yan-ji-lu-yi-kai-shi/kao-yan-ji-lu-yi-kai-shi.html"/>
      <url>/kao-yan/2019/09/22/kao-yan-ji-lu-yi-kai-shi/kao-yan-ji-lu-yi-kai-shi.html</url>
      
        <content type="html"><![CDATA[<h1 id="。。。。。。考研加油。。。。。。"><a href="#。。。。。。考研加油。。。。。。" class="headerlink" title="。。。。。。考研加油。。。。。。"></a><strong>。。。。。。考研加油。。。。。。</strong></h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 考研 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>TRUESTUDIO使用Jlink下载程序</title>
      <link href="/embedded/2019/09/22/truestudio-shi-yong-jlink-xia-zai-cheng-xu/truestudio-shi-yong-jlink-xia-zai-cheng-xu.html"/>
      <url>/embedded/2019/09/22/truestudio-shi-yong-jlink-xia-zai-cheng-xu/truestudio-shi-yong-jlink-xia-zai-cheng-xu.html</url>
      
        <content type="html"><![CDATA[<h1 id="TRUESTUDIO使用Jlink下载程序"><a href="#TRUESTUDIO使用Jlink下载程序" class="headerlink" title="TRUESTUDIO使用Jlink下载程序"></a><strong>TRUESTUDIO使用Jlink下载程序</strong></h1><ol><li>配置外部工具<br><img src="https://i.loli.net/2019/09/21/vFLElqkZQMcrT97.png" alt="Jlink外部工具配置"><br>之后配置<code>运行配置</code>,添加启动组，创建启动组并选择刚刚配置好的外部工具。具体的步骤可以参考<a href="http://blog.atollic.com/stm32cubeprogrammer-atollic-truestudio-for-stm32" target="_blank" rel="noopener">truestudio集成stm32cubeprogrammer</a>;</li></ol><p>同样的可以配置stlink作为外部工具使用，这样也可以下载程序到目标单片机，配置好运行配置，可以直接点击<code>运行</code>运行外部工具。看下图配置外部工具：</p><p><img src="https://i.loli.net/2019/09/21/zX7TlfZRKScY1w4.png" alt="st-link flash download"></p><p><img src="https://i.loli.net/2019/09/21/MGSPKyYvdwu4lc9.png" alt="stm32cubeprogrammer download"></p><p><img src="https://i.loli.net/2019/09/21/IlyzdiWNTKeXYgb.png" alt="stm32cubeprogrammer download"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Embedded </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STM32 </tag>
            
            <tag> TRUESTDUDIO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>眼图</title>
      <link href="/tong-xin-yuan-li/2019/04/24/yan-tu/yan-tu.html"/>
      <url>/tong-xin-yuan-li/2019/04/24/yan-tu/yan-tu.html</url>
      
        <content type="html"><![CDATA[<h1 id="眼图"><a href="#眼图" class="headerlink" title="眼图"></a>眼图</h1><p><a href="http://bfiles.chinaaet.com/justlxy/blog/20171120/1000019445-6364677248942560424241589.pdf" target="_blank" rel="noopener">看这篇文章</a></p><p>或者</p><a href="https://yadi.sk/i/XgTfA3cmPyIhTw" title="[本地下载]" target="_blank" rel="noopener"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 通信原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在Keil C51中嵌入汇编代码</title>
      <link href="/embedded/2018/11/17/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma.html"/>
      <url>/embedded/2018/11/17/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma.html</url>
      
        <content type="html"><![CDATA[<h1 id="如何在keil-C51-中嵌入汇编代码"><a href="#如何在keil-C51-中嵌入汇编代码" class="headerlink" title="如何在keil C51 中嵌入汇编代码"></a>如何在keil C51 中嵌入汇编代码</h1><ol><li><p>使用keil关键字</p><pre class="line-numbers language-lang-c"><code class="language-lang-c">#pragma ASM //汇编代码开始;//汇编代码#pragma ENDASM    //汇编代码结束<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="https://s2.ax1x.com/2019/09/24/uAmUuF.png" width="300" height="200"></li><li><p>在嵌入汇编代码的c文件激活SRC命令，做法如下：</p><ul><li>在项目窗口左键单击该c文件，选择 <strong>Options for…</strong>, 然后使能右侧的<strong>Generate Assembler SRC file</strong>和<strong>Assemble SRC file</strong>选项，重新编译即可。</li></ul></li></ol><img src="https://s2.ax1x.com/2019/09/24/uAmdHJ.png" width="300" height="200"><img src="https://s2.ax1x.com/2019/09/24/uAmBNR.png" width="300" height="200"><img src="https://s2.ax1x.com/2019/09/24/uAmBNR.png" width="300" height="200"><p><a href="http://www.keil.com/support/docs/614.htm" target="_blank" rel="noopener">更多详情请点这</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Embedded </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C51 </tag>
            
            <tag> Keil </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑使用SSR科学上网</title>
      <link href="/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang.html"/>
      <url>/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang.html</url>
      
        <content type="html"><![CDATA[<h1 id="电脑使用SSR科学上网"><a href="#电脑使用SSR科学上网" class="headerlink" title="电脑使用SSR科学上网"></a><strong>电脑使用SSR科学上网</strong></h1><h2 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h2><ul><li><a href="https://yadi.sk/d/gSNpo7KmbYwtQw" title="ShadowsocksR-WIN" target="_blank" rel="noopener"></a></li><li><a href="https://yadi.sk/d/D99_NgXxD3H4Qg" title="浏览器代理插件" target="_blank" rel="noopener"></a></li><li>浏览器 <a href="http://down.tech.sina.com.cn/content/40975.html" target="_blank" rel="noopener">Chrome</a> 或者 <a href="https://browser.yandex.com" target="_blank" rel="noopener">Yandex</a>(推荐),（360，百度，UC等国产浏览器，请自行Google）</li></ul><h2 id="步骤（以Yandex为例）"><a href="#步骤（以Yandex为例）" class="headerlink" title="步骤（以Yandex为例）"></a>步骤（以Yandex为例）</h2><ul><li>将ShadowsocksR-4.7.0-win.7z解压至任意目录，双击ShadowsocksR-dotnet4.0.exe启动，就会在任务栏里看到一个白色的小飞机，可以左键单击打开，填入相关信息，<strong>确定</strong> 即可，还可右键单击唤出菜单，选择<strong>从剪贴板批量导入ssr链接</strong> （前提是先将ssr链接复制到剪贴板），之后<strong>确定</strong>即可。</li><li>小飞机的相关设置，右键单击唤出菜单，—<strong>系统代理模式</strong>—选择PAC模式（优选）或者全局模式，如果选择PAC模式，需将此文件<a href="https://yadi.sk/d/zt6OiTn9OTkfrw" title="pac.txt" target="_blank" rel="noopener"></a>复制到与ShadowsocksR-dotnet4.0.exe同级目录下，覆盖原文件。—<strong>代理规则</strong>—选择绕过局域网和大陆。<br>｛% img <a href="https://s2.ax1x.com/2019/09/24/uAVtje.png" target="_blank" rel="noopener">https://s2.ax1x.com/2019/09/24/uAVtje.png</a> %｝</li><li>浏览器设置，安装代理扩展：打开浏览器<strong>扩展程序管理</strong>，之后，Chrome需要打开开发者模式才能安装非商店扩展，Yandex直接将chromeFOR.COM_proxy-switchyomega_v2.5.20.crx扩展程序拖到扩展程序管理页面即可安装,chorme在打开开发者模式之后的操作和Yandex一样。<img src="https://i.loli.net/2019/09/24/eaDSGJ8Wzdc2R5j.png"></li><li>安装完扩展，就可以设置了。<ul><li>左键单击浏览器上方标签栏的proxy-switchchyomega图标，单击最下边的—<strong>选项</strong>—，在页面中单击—<strong>新建情景模式</strong>—  <img src="https://s2.ax1x.com/2019/09/24/uAVD4P.png">  </li></ul></li></ul><p>输入名称（这里我的是myserver），选择代理服务器，点击创建。<br><img src="https://s2.ax1x.com/2019/09/24/uAZLz8.png"></p><p>  内容与下图相同<br>  <img src="https://s2.ax1x.com/2019/09/24/uAepon.png">  </p><ul><li><p>再次—<strong>新建情景模式</strong>—，输入名称（我的是auto-switch），选择<strong>自动切换模式</strong>，点击创建。<img class="XSL_2018-11-02_22-52-25.png">, 内容和下图相同:<img src="https://s2.ax1x.com/2019/09/24/uAe3QO.png">。<br>其中规则列表网址填入：</p><pre><code>https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</code></pre><p>然后点击下方的<strong>立即更新情景模式</strong>按钮，<strong>保存</strong>，更新完后，一定要点击左侧的<strong>应用选项</strong>，退出。</p><ul><li><p>点击proxy-switchchyomega图标，选择<strong>auto-switch</strong>模式，</p><img src="https://s2.ax1x.com/2019/09/24/uAmJ3V.png"></li><li><p>测试。在浏览器地址栏输入<em>google.com</em>或者<em>youtube.com</em>。回车，能访问说明成功了。</p></li></ul></li></ul><h2 id="说在在最后"><a href="#说在在最后" class="headerlink" title="说在在最后"></a>说在在最后</h2><ul><li>小飞机如果没有打开，并且proxy-switchchyomega选择了自动切换，那么访问没有被墙的网页能正常访问，被墙的网页则不能，所以一定要检查小飞机是否运行。</li><li>如果SSR选择的PAC模式，那么在<strong>系统设置</strong>-&gt;<strong>网络和Internet</strong>-&gt;<strong>代理</strong> 里会有一个代理脚本，如果发生无法访问任何网页，尝试关闭这个。<img src="https://s2.ax1x.com/2019/09/24/uAmYcT.png"></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 电脑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大创项目系列(一) OLED屏幕驱动</title>
      <link href="/embedded/2018/10/15/da-chuang-xiang-mu-xi-lie-yi-oled-ping-mu-qu-dong/da-chuang-xiang-mu-xi-lie-yi-oled-ping-mu-qu-dong.html"/>
      <url>/embedded/2018/10/15/da-chuang-xiang-mu-xi-lie-yi-oled-ping-mu-qu-dong/da-chuang-xiang-mu-xi-lie-yi-oled-ping-mu-qu-dong.html</url>
      
        <content type="html"><![CDATA[<h1 id="大创项目系列-一-OLED屏幕驱动"><a href="#大创项目系列-一-OLED屏幕驱动" class="headerlink" title="大创项目系列(一) OLED屏幕驱动"></a><strong>大创项目系列(一) OLED屏幕驱动</strong></h1><p>很久之前查阅资料，驱动过0.96寸OLED屏幕，现在将其移植到我的大创项目作调试信息输出显示，不太想用uart接口在电脑显示信息了，太浪费USB口了（第一次感觉到我的小本本USB口不够用）。</p><p>这个0.96寸OLED屏是使用7线制的，默认使用4线spi。接口定义如下：</p><ul><li>GND</li><li>VCC</li><li>D0(SPI_SCK)</li><li>D1(SPI_MOSI)</li><li>RES(屏幕复位)</li><li>DC(数据和命令控制管脚)</li><li>CS(设备片选)</li></ul><h2 id="底层函数——-实现复位，写命令，写数据"><a href="#底层函数——-实现复位，写命令，写数据" class="headerlink" title="底层函数——-实现复位，写命令，写数据"></a>底层函数——-实现复位，写命令，写数据</h2><hr><h2 id="屏幕初始化函数"><a href="#屏幕初始化函数" class="headerlink" title="屏幕初始化函数"></a>屏幕初始化函数</h2><hr><h2 id="像素绘制"><a href="#像素绘制" class="headerlink" title="像素绘制"></a>像素绘制</h2><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Embedded </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>驱动资料不详的LCD12864液晶屏</title>
      <link href="/embedded/2018/10/12/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping.html"/>
      <url>/embedded/2018/10/12/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping.html</url>
      
        <content type="html"><![CDATA[<h1 id="关于用C51驱动资料不详的LCD12864液晶屏"><a href="#关于用C51驱动资料不详的LCD12864液晶屏" class="headerlink" title="关于用C51驱动资料不详的LCD12864液晶屏"></a><strong>关于用C51驱动资料不详的LCD12864液晶屏</strong></h1><p>说来一片心酸泪，上学期大四毕业，新生广场有旧物买卖，闲逛一波，花了45块前买了一堆<strong>电子垃圾</strong>（手动滑稽），当时我还为此沾沾自喜，Arduino uno两块，Arduino mage一块，还有一堆外设，比如传感器，蓝牙什么的。。。。。简直超值。。。。。。。。可惜啊！！！！！！！好多没有资料的（要哭了有没有）(┬＿┬)(┬＿┬)(┬＿┬)(┬＿┬)〒▽〒。。。。。</p><p>比如这块LCD12864液晶屏，淘宝买二三十。。。。。。</p><p><img src="/https://i.loli.net/2019/09/24/pbUXykRnDvZWeLO.jpg" alt="图一" width="450" height="600"></p><p><img src="/https://i.loli.net/2019/09/24/NEMQmL9iOdzVSsx.jpg" alt="图一" width="450" height="600"></p><p>突发奇想，想用一下。。。。。<strong>google</strong>了好久,终于找到看似是它的<a href="https://yadi.sk/i/b4oA-vqpflxb0Q" title="主控ST7565的数据手册" target="_blank" rel="noopener"></a>。。。。我也不知道是不是真的，看起来可信度挺高的。。。</p><img src="https://i.loli.net/2019/09/24/Wu83znFVP491K5Q.png" title="FPC692A引脚定义"><img src="https://i.loli.net/2019/09/24/OKjs58zo2QZ7NbT.png" title="读写命令"><img src="https://i.loli.net/2019/09/24/myFkNgz1xCda3BW.png" title="复位"><img src="https://i.loli.net/2019/09/24/loAYecEJG4n7wXs.png" title="时序说明"><img src="https://i.loli.net/2019/09/24/fPRZrT49oeNQmYH.png" title="时序说明"><img src="https://i.loli.net/2019/09/24/X4MiC1uETZJvIkO.png" title="时序图"><h2 id="话不多说。。。。。。。。。结果不行。。。。。"><a href="#话不多说。。。。。。。。。结果不行。。。。。" class="headerlink" title="话不多说。。。。。。。。。结果不行。。。。。"></a>话不多说。。。。。。。。。结果不行。。。。。</h2><a href="https://yadi.sk/d/Xsac1sOFsZiQ1w" title="SOURCE" target="_blank" rel="noopener"></a><h1 id="简直日了一条狗的感觉有没有"><a href="#简直日了一条狗的感觉有没有" class="headerlink" title="简直日了一条狗的感觉有没有"></a><strong>简直日了一条狗的感觉有没有</strong></h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Embedded </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C51 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建SSR</title>
      <link href="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr.html"/>
      <url>/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr.html</url>
      
        <content type="html"><![CDATA[<h1 id="搭建SSR教程"><a href="#搭建SSR教程" class="headerlink" title="搭建SSR教程"></a>搭建SSR教程</h1><hr><p>记录一下教程，以免找不着。</p><ol><li><p>购买海外VPS，我使用 <a href="https://www.vultr.com/" target="_blank" rel="noopener">vultr</a>，注册购买：</p><ul><li>节点选 <strong>新加坡</strong>，系统选CentOS 6 64位，不要选CentOS 7（带防火墙），套餐按需即可，开启IPV6，付款即可。</li></ul></li><li><p>本地远程连接服务器：</p><ul><li>使用<a href="https://www.netsarang.com/products/xsh_overview.html" target="_blank" rel="noopener">Xshell</a>连接，主机处填服务器IP，在Server-overview处都有，包括IP，登陆用户名，密码。</li></ul><img src="https://i.loli.net/2019/09/24/Bb1vYKfnuQahH2V.png" title="xshelll连接"><img src="https://i.loli.net/2019/09/24/YytZEDHAT5a1jGB.png" title="登录信息"><ul><li>填入IP后点击连接，会弹出如下界面：</li></ul><img src="https://i.loli.net/2019/09/24/EdHifklnqSzK28C.png" title="填入用户名"><img src="https://i.loli.net/2019/09/24/JcleOt8LEsDA1dB.png" title="填入用户名"><p>填入先前Server-Overview显示的用户名，默认是<strong>root</strong>。如果没弹出此界面，而是显示如下信息，说明IP被墙，那就得再开一台服务器，vultr每开一台服务器收费0.01美元，每开一台，就是一个新IP，所以可以多开几台备用，选择能用的，然后删除剩余服务器即可。费用是按小时收费的。</p><p><strong>删除服务器：</strong></p><img src="https://i.loli.net/2019/09/24/xTI4Gcq83CLb7YX.png" title="删除服务器"><ul><li>填入用户名，接着填入密码：</li></ul><img src="https://i.loli.net/2019/09/24/FVQtDgX7IYdcGKE.png" title="填入密码"><ul><li>然后就会显示如下界面，说明连接成功：</li></ul><img src="https://i.loli.net/2019/09/24/RPZ5OCjVNSHeT4a.png" title="连接成功"></li></ol><p>3.连接成功后就可以安装SSR了：</p><p>输入以下命令：</p><pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssrmu.sh &amp;&amp; chmod +x ssrmu.sh &amp;&amp; bash ssrmu.sh</code></pre><p>快捷管理命令：</p><pre><code>bash ssrmu.sh</code></pre><p> 之后按提示完成安装。</p><p>4.安装BBR加速：</p><p>输入命令：</p><pre><code>wget -N --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; bash bbr.sh</code></pre><p>检查BBR是否安装成功：</p><pre><code>lsmod | grep bbr</code></pre><p>显示类似： <em>tcp_bbr 20480 15</em>，说明安装成功。</p><p>5.电脑端设置：</p><p>下载ShadowsocksR-win。</p><a href="https://yadi.sk/d/gSNpo7KmbYwtQw" title="ShadowsocksR-WIN" target="_blank" rel="noopener"></a>。解压后，双击打开**ShadowsocksR-dotnet4.0.exe**，复制ssr链接，然后选择**从剪贴板导入**。或者手动设置服务器信息。相关设置按需选择即可。6.(Chrome)浏览器设置：为了方便管理代理，使用插件 SwitchyOmega [\[Chrome APP商店\]](https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif)，<a href="https://yadi.sk/d/D99_NgXxD3H4Qg" title="[本地下载]" target="_blank" rel="noopener"></a>。安装完成后进行如下操作：(1). 新建情景模式，类型选**代理服务器**。按如下填写：<img src="https://i.loli.net/2019/09/24/NLUho3k8cIYFVGs.png" title="代理服务器模式"><p>(2). 新建情景模式，类型选<strong>自动切换模式</strong>，按如下填写：</p><p>规则列表网址填：</p><pre><code>https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</code></pre><img src="https://i.loli.net/2019/09/24/86XVg1tfjOkp7aZ.png" title="自动切换模式">    <p>！！！！填完点击下方的按钮 <strong>立即更新情景模式</strong>。退出前不要忘记<strong>保存</strong>，点击左侧的<strong>应用选项</strong>。</p><p>！！！！填完点击下方的按钮 <strong>立即更新情景模式</strong>。退出前不要忘记<strong>保存</strong>，点击左侧的<strong>应用选项</strong>。</p><p>！！！！填完点击下方的按钮 <strong>立即更新情景模式</strong>。退出前不要忘记<strong>保存</strong>，点击左侧的<strong>应用选项</strong>。</p><p>最后选择<strong>自动切换模式</strong>。</p><img src="https://i.loli.net/2019/09/24/dK9Cq3tckZMlsUG.png" title="选择自动切换模式"><p>打开<em>google.com</em>测试。</p><p>参考链接：</p><p><a href="https://doub.io/ss-jc60/" target="_blank" rel="noopener">doubi</a></p><p><a href="https://github.com/shadowsocks/shadowsocks-windows/issues/1709" target="_blank" rel="noopener">shadowsocks-windows</a></p><p><a href="https://github.com/ToyoDAdoubi/doubi" target="_blank" rel="noopener">一个逗比写的各种逗比脚本</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 电脑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑开启卓越性能</title>
      <link href="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng.html"/>
      <url>/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng.html</url>
      
        <content type="html"><![CDATA[<h1 id="win10系统（版本号在1803以上）开启性能模式"><a href="#win10系统（版本号在1803以上）开启性能模式" class="headerlink" title="win10系统（版本号在1803以上）开启性能模式"></a>win10系统（版本号在1803以上）开启性能模式</h1><p>win10升级到1803后，微软将电源管理现在的“性能模式”等同于原先的“平衡模式”，所以想要更好的发挥电脑性能，就要开启隐藏的卓越模式。</p><ul><li>以“管理员身份”运行<em>Windows shell</em>。</li></ul><img src="https://s2.ax1x.com/2019/09/24/uAm54I.png"><ul><li>输入命令 <strong>powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61</strong>，回车，等一会，就会提示开启卓越模式（序列号不同，我也不清楚怎么回事）了。</li></ul><img src="https://s2.ax1x.com/2019/09/24/uAm7gf.png"><ul><li>打开<em>控制面板</em>，进入<em>电源选项</em>，或者在地址栏输入 <strong>控制面板\所有控制面板项\电源选项</strong>，就会发现多了一个<strong>卓越性能</strong>选项，开启它即可。</li></ul><img src="https://s2.ax1x.com/2019/09/24/uAmHv8.png"> <h3 id="以下是几个模式对比："><a href="#以下是几个模式对比：" class="headerlink" title="以下是几个模式对比："></a>以下是几个模式对比：</h3><p>1.卓越模式：</p><img src="https://s2.ax1x.com/2019/09/24/uAmObQ.png"><p>2.性能模式：</p><img src="https://s2.ax1x.com/2019/09/24/uAnURP.png"><p>3.平衡模式：</p><img src="https://s2.ax1x.com/2019/09/24/uAnrZQ.png"><p>4节能模式：</p><img src="https://s2.ax1x.com/2019/09/24/uAncin.png"><p><strong>开启卓越模式，注意散热。</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 电脑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电脑技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C51-LCD1602</title>
      <link href="/embedded/2018/10/05/c51-lcd1602/c51-lcd1602.html"/>
      <url>/embedded/2018/10/05/c51-lcd1602/c51-lcd1602.html</url>
      
        <content type="html"><![CDATA[<h1 id="STC12C5A60S2调试LCD1602"><a href="#STC12C5A60S2调试LCD1602" class="headerlink" title="STC12C5A60S2调试LCD1602"></a><strong>STC12C5A60S2调试LCD1602</strong></h1><p>国庆假期，闲来无事，突然想起我还有几片<em><a href="http://stcmcu.com/" target="_blank" rel="noopener">STC12C5A60S2</a> [<a href="http://www.stcmcudata.com/datasheet/stc/STC-AD-PDF/STC12C5A60S2.pdf" target="_blank" rel="noopener">datasheet</a>]</em>，还有一片<em><a href="http://stcmcu.com/" target="_blank" rel="noopener">STC12L5A60S2</a> [<a href="http://www.stcmcudata.com/datasheet/stc/STC-AD-PDF/STC12C5A60S2.pdf" target="_blank" rel="noopener">datasheet</a>]</em>,对了，还有两片<em><a href="http://stcmcu.com/" target="_blank" rel="noopener">STC15FWA60S2</a> [<a href="">datashet</a>]</em>，其实，根据STC系列单片机命名方法，STCC5A60S2和STC12L5A60S2是一样的，只是供电电压有所不同，“C5”代表供电电压是5V，“L5”代表供电电压是3.3v的。芯片最高频率和芯片引脚的速度也有所不同。还有几片LCD1602，想来很久之前，没能驱动成功，这次再次发起挑战。</p><ul><li><p><strong>LCD1602接口定义：</strong></p><p>1.RS——寄存器选择输入端</p><ul><li>RS=1：指向数据寄存器</li><li>RS=0：指向指令寄存器</li></ul><p>2.RW——读写控制输入端    </p><ul><li>RW=1：读操作</li><li>RW=0：写操作</li></ul><p>3.E（EN）使能端</p><ul><li>读操作时，高电平有效</li><li>写操作时，下降沿有效</li></ul><p>4.D0-D7：数据输入输出端</p></li><li><p><strong>LCD1602操作时序图：</strong></p><img src="https://s2.ax1x.com/2019/09/24/uAnzee.png"></li><li><p><strong>底层函数</strong></p><p>1.使能函数(必须使能LCD1602才能执行命令)  </p></li></ul><pre class="line-numbers language-lang-c"><code class="language-lang-c">    static void LCD_pulseEnable(void){            LCD_EN=0;        Delay_us(10);        LCD_EN=1;        Delay_us(10);        LCD_EN=0;        Delay_us(10);    //    LCD_EN=1;    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 2.IO口操作函数</p><pre class="line-numbers language-lang-c"><code class="language-lang-c">    static void LCD_write4bits(unsigned char value){        DP=value&0xf0;        LCD_pulseEnable();    }    static void LCD_write8bits(unsigned char value){        DP=value&0xff;        LCD_pulseEnable();    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 3.数据输出函数</p><pre class="line-numbers language-lang-c"><code class="language-lang-c">    static void LCD_send(unsigned char value, unsigned char mode){        LCD_RW=1;        Delay_us(10);        LCD_RS=mode;        LCD_RW=0;        if(displayFunction&LCD_8BITMODE){            LCD_write8bits(value);        }else{            LCD_write4bits((value));            LCD_write4bits(value<<4);        }        LCD_RW=1;        LCD_RS=(!mode);    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 4.写命令</p><pre class="line-numbers language-lang-c"><code class="language-lang-c">    void LCD_Command(unsigned char value){        LCD_send(value, W_COMMAND);    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p> 5.写数据</p><pre class="line-numbers language-lang-c"><code class="language-lang-c">    char LCD_Write(unsigned char value){        LCD_send(value, W_DATA);        return 1;    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><strong>硬件抽象层函数</strong></p><p>1.初始化函数</p><ul><li>初始化行数和列数</li></ul></li></ul><pre class="line-numbers language-lang-c"><code class="language-lang-c">        void LCD_Begin(unsigned char cols, unsigned char lines){          unsigned char dotsize=LCD_5x8DOTS;            pinInit(0, 0, PIN_MODE_OP);            portInit(1);            portInit(2);          if (lines > 1) {            displayFunction |= LCD_2LINE;          }          numLines = lines;            lcdCol=cols;          LCD_SetRowOffsets(0x00, 0x40, 0x00 + cols, 0x40 + cols);            // for some 1 line displays you can select a 10 pixel high font          if ((dotsize != LCD_5x8DOTS) && (lines == 1)) {            displayFunction |= LCD_5x10DOTS;          }          // SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!          // according to datasheet, we need at least 40ms after power rises above 2.7V          // before sending commands. Arduino can turn on way before 4.5V so we'll wait 50          Delay_ms(5);             LCD_RS=0;            LCD_EN=0;          LCD_RW=0;          //put the LCD into 4 bit or 8 bit mode          if (!(displayFunction & LCD_8BITMODE)){            // this is according to the hitachi HD44780 datasheet            // figure 24, pg 46            // we start in 8bit mode, try to set 4 bit mode            LCD_write4bits(0x03);        //    delayMicroseconds(4500); // wait min 4.1ms                Delay_us(4500);            // second try            LCD_write4bits(0x03);        //    delayMicroseconds(4500); // wait min 4.1ms            Delay_us(4500);            // third go!            LCD_write4bits(0x03);         //    delayMicroseconds(150);                Delay_us(150);            // finally, set to 4-bit interface            LCD_write4bits(0x02);           }else{            // this is according to the hitachi HD44780 datasheet            // page 45 figure 23            // Send function set command sequence            LCD_Command(LCD_FUNCTIONSET | displayFunction);        //    delayMicroseconds(4500);  // wait more than 4.1ms                Delay_us(4500);            // second try            LCD_Command(LCD_FUNCTIONSET | displayFunction);        //    delayMicroseconds(150);                Delay_us(150);            // third go            LCD_Command(LCD_FUNCTIONSET | displayFunction);          }          // finally, set # lines, font size, etc.          LCD_Command(LCD_FUNCTIONSET | displayFunction);            // turn the display on with no cursor or blinking default          displayControl = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;            LCD_Display();          // clear it off          LCD_Clear();          // Initialize to default text direction (for romance languages)          displayMode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;          // set the entry mode          LCD_Command(LCD_ENTRYMODESET | displayMode);        }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>初始化数据线(四线制或八线制)</li></ul><pre class="line-numbers language-lang-c"><code class="language-lang-c">    void LCD_Init(unsigned char fourbitmode){        if(fourbitmode)            displayFunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;          else                 displayFunction = LCD_8BITMODE | LCD_1LINE | LCD_5x8DOTS;        LCD_Begin(16, 1);      }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 2.在指定位置显示一个字节</p><pre class="line-numbers language-lang-c"><code class="language-lang-c">    void LCD_DisplayChr(unsigned char col, unsigned char row, unsigned char value){        LCD_SetCursor(col,row);        LCD_Write(value);    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 3.在指定位置显示字符串</p><pre class="line-numbers language-lang-c"><code class="language-lang-c">    void LCD_DisplayStr(unsigned char col, unsigned char     row, unsigned char code* str){            unsigned char i=0;        while(str[i]>=0x20){            LCD_DisplayChr(col+i, row, str[i]);            Delay_us(10);            if(i>(lcdCol-col) && ((numLines-row)>=1)){                LCD_DisplayChr((i-lcdCol+col-1), row+1, str[i]);                Delay_us(10);            }            i++;        }    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><strong>测试</strong></p><p>在<em>main.c</em>文件</p></li></ul><pre class="line-numbers language-lang-c"><code class="language-lang-c">    void main(void){        unsigned char i,len=sizeof(t);        P00=0;        Delay_ms(1000);        P00=1;        LCD_Init(LINES_4);        LCD_Begin(16, 2);        LCD_Clear();        LCD_SetCursor(0,0);        LCD_DisplayChr(0, 0, 'A');        Delay_ms(100);        LCD_DisplayChr(1, 0, 'B');            Delay_ms(100);        LCD_DisplayChr(2, 0, 'C');            Delay_ms(100);        LCD_DisplayChr(3, 0, 'D');            Delay_ms(100);        LCD_DisplayChr(4, 0, 'E');                Delay_ms(100);        LCD_DisplayChr(0, 1, 'F');                Delay_ms(100);        LCD_DisplayChr(1, 1, 'G');        LCD_DisplayStr(0, 1, t);                //通过    //    LCD_DisplayStr(0, 1, "test,LCD!";        //通过        while(1);    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://s2.ax1x.com/2019/09/24/uAnodJ.jpg" title="测试图"><img src="/embedded/2018/10/05/c51-lcd1602/c51-lcd1602/739507439392664788.jpg" width="350" height="700" title="测试图"><p><img src="/embedded/2018/10/05/c51-lcd1602/c51-lcd1602/739507439392664788.jpg" alt="ceshitu" width="300" height="150"></p><p><strong><a href="https://yadi.sk/d/zt6OiTn9OTkfrw" target="_blank" rel="noopener">源码文件</a></strong>    </p><a>code.zip 源码文件</a><p>2018/10/6 22:17:54 2018/10/6 22:17:55 </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Embedded </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C51 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My First Blogs</title>
      <link href="/uncategorized/2018/10/04/my-first-blogs/my-first-blogs.html"/>
      <url>/uncategorized/2018/10/04/my-first-blogs/my-first-blogs.html</url>
      
        <content type="html"><![CDATA[<h1 id="一件有意义的事"><a href="#一件有意义的事" class="headerlink" title="一件有意义的事"></a><strong>一件有意义的事</strong></h1><hr><p>这是我的第一篇博客，昨晚和林式说了之后，我问她,你猜我要写什么?她说，这是我的第一篇博客，应该记录一些有意义的事。其实我早已想好。</p><p>我之前在<em>Aigirl</em>看到一篇连载，《我想做能在你的葬礼上描述你一生的人》。有个评论：</p><p><img src="/images/My-First-Blogs/20181004134415.jpg" alt="wChat"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> none </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
