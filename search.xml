<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>TRUESTUDIO使用Jlink下载程序</title>
      <link href="/enbedded-stm32/2019/09/22/truestudio-shi-yong-jlink-xia-zai-cheng-xu/truestudio-shi-yong-jlink-xia-zai-cheng-xu.html"/>
      <url>/enbedded-stm32/2019/09/22/truestudio-shi-yong-jlink-xia-zai-cheng-xu/truestudio-shi-yong-jlink-xia-zai-cheng-xu.html</url>
      
        <content type="html"><![CDATA[<h1 id="TRUESTUDIO使用Jlink下载程序"><a href="#TRUESTUDIO使用Jlink下载程序" class="headerlink" title="TRUESTUDIO使用Jlink下载程序"></a><strong>TRUESTUDIO使用Jlink下载程序</strong></h1><ol><li>配置外部工具<br><img src="https://i.loli.net/2019/09/21/vFLElqkZQMcrT97.png" alt="Jlink外部工具配置"><br>之后配置<code>运行配置</code>,添加启动组，创建启动组并选择刚刚配置好的外部工具。具体的步骤可以参考<a href="http://blog.atollic.com/stm32cubeprogrammer-atollic-truestudio-for-stm32" target="_blank" rel="noopener">truestudio集成stm32cubeprogrammer</a>;</li></ol><p>同样的可以配置stlink作为外部工具使用，这样也可以下载程序到目标单片机，配置好运行配置，可以直接点击<code>运行</code>运行外部工具。看下图配置外部工具：</p><p><img src="https://i.loli.net/2019/09/21/zX7TlfZRKScY1w4.png" alt="st-link flash download"></p><p><img src="https://i.loli.net/2019/09/21/MGSPKyYvdwu4lc9.png" alt="stm32cubeprogrammer download"></p><p><img src="https://i.loli.net/2019/09/21/IlyzdiWNTKeXYgb.png" alt="stm32cubeprogrammer download"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> -Enbedded -STM32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -TRUESTDUDIO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>眼图</title>
      <link href="/tong-xin-yuan-li/2019/04/24/yan-tu/yan-tu.html"/>
      <url>/tong-xin-yuan-li/2019/04/24/yan-tu/yan-tu.html</url>
      
        <content type="html"><![CDATA[<h1 id="眼图"><a href="#眼图" class="headerlink" title="眼图"></a>眼图</h1><p><a href="http://bfiles.chinaaet.com/justlxy/blog/20171120/1000019445-6364677248942560424241589.pdf" target="_blank" rel="noopener">看这篇文章</a></p><p>或者</p><a href="/tong-xin-yuan-li/2019/04/24/yan-tu/yan-tu/1000019445-6364677248942560424241589.pdf" title="[本地下载]">[本地下载]</a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> --通信原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在Keil C51中嵌入汇编代码</title>
      <link href="/embedded/2018/11/17/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma.html"/>
      <url>/embedded/2018/11/17/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma.html</url>
      
        <content type="html"><![CDATA[<h1 id="如何在keil-C51-中嵌入汇编代码"><a href="#如何在keil-C51-中嵌入汇编代码" class="headerlink" title="如何在keil C51 中嵌入汇编代码"></a>如何在keil C51 中嵌入汇编代码</h1><ol><li><p>使用keil关键字</p><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">pragma</span> ASM </span><span class="token comment" spellcheck="true">//汇编代码开始</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//汇编代码</span><span class="token macro property">#<span class="token directive keyword">pragma</span> ENDASM    </span><span class="token comment" spellcheck="true">//汇编代码结束</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="/embedded/2018/11/17/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma/XSL_2018-11-16_21-37-04.png" width="300" height="200"></li><li><p>在嵌入汇编代码的c文件激活SRC命令，做法如下：</p><ul><li>在项目窗口左键单击该c文件，选择 <strong>Options for…</strong>, 然后使能右侧的<strong>Generate Assembler SRC file</strong>和<strong>Assemble SRC file</strong>选项，重新编译即可。</li></ul></li></ol><img src="/embedded/2018/11/17/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma/XSL_2018-11-16_21-37-47.png" width="300" height="200"><img src="/embedded/2018/11/17/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma/XSL_2018-11-16_21-38-59.png" width="300" height="200"><img src="/embedded/2018/11/17/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma/zai-keil-c51-zhong-qian-ru-hui-bian-dai-ma/XSL_2018-11-16_21-39-39.png" width="300" height="200"><p><a href="http://www.keil.com/support/docs/614.htm" target="_blank" rel="noopener">更多详情请点这</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> --Embedded </category>
          
      </categories>
      
      
        <tags>
            
            <tag> --C51 --Keil </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑使用SSR科学上网</title>
      <link href="/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang.html"/>
      <url>/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang.html</url>
      
        <content type="html"><![CDATA[<h1 id="电脑使用SSR科学上网"><a href="#电脑使用SSR科学上网" class="headerlink" title="电脑使用SSR科学上网"></a><strong>电脑使用SSR科学上网</strong></h1><h2 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h2><ul><li><a href="/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang/ShadowsocksR-4.7.0-win.7z" title="ShadowsocksR-WIN">ShadowsocksR-WIN</a></li><li><a href="/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang/chromeFOR.COM_proxy-switchyomega_v2.5.20.crx" title="浏览器代理插件">浏览器代理插件</a></li><li>浏览器 <a href="http://down.tech.sina.com.cn/content/40975.html" target="_blank" rel="noopener">Chrome</a> 或者 <a href="https://browser.yandex.com" target="_blank" rel="noopener">Yandex</a>(推荐),（360，百度，UC等国产浏览器，请自行Google）</li></ul><h2 id="步骤（以Yandex为例）"><a href="#步骤（以Yandex为例）" class="headerlink" title="步骤（以Yandex为例）"></a>步骤（以Yandex为例）</h2><ul><li>将ShadowsocksR-4.7.0-win.7z解压至任意目录，双击ShadowsocksR-dotnet4.0.exe启动，就会在任务栏里看到一个白色的小飞机，可以左键单击打开，填入相关信息，<strong>确定</strong> 即可，还可右键单击唤出菜单，选择<strong>从剪贴板批量导入ssr链接</strong> （前提是先将ssr链接复制到剪贴板），之后<strong>确定</strong>即可。</li><li>小飞机的相关设置，右键单击唤出菜单，–<strong>系统代理模式</strong>–选择PAC模式（优选）或者全局模式，如果选择PAC模式，需将此文件<a href="/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang/pac.txt" title="pac.txt">pac.txt</a>复制到与ShadowsocksR-dotnet4.0.exe同级目录下，覆盖原文件。–<strong>代理规则</strong>–选择绕过局域网和大陆。<br>｛% asset_img XSL_2018-11-02_22-37-48.png %｝</li><li>浏览器设置，安装代理扩展：打开浏览器<strong>扩展程序管理</strong>，之后，Chrome需要打开开发者模式才能安装非商店扩展，Yandex直接将chromeFOR.COM_proxy-switchyomega_v2.5.20.crx扩展程序拖到扩展程序管理页面即可安装,chorme在打开开发者模式之后的操作和Yandex一样。<img src="/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang/XSL_2018-11-02_22-44-42.png"></li><li>安装完扩展，就可以设置了。<ul><li>左键单击浏览器上方标签栏的proxy-switchchyomega图标，单击最下边的–<strong>选项</strong>–，在页面中单击–<strong>新建情景模式</strong>–  <img src="/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang/XSL_2018-11-02_22-51-29.png">  </li></ul></li></ul><p>输入名称（这里我的是myserver），选择代理服务器，点击创建。<br><img src="/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang/XSL_2018-11-02_22-51-49.png"></p><p>  内容与下图相同<br>  <img src="/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang/XSL_2018-11-02_22-52-41.png">  </p><ul><li><p>再次–<strong>新建情景模式</strong>–，输入名称（我的是auto-switch），选择<strong>自动切换模式</strong>，点击创建。<img src="/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang/XSL_2018-11-02_22-52-25.png">, 内容和下图相同:<img src="/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang/XSL_2018-11-02_22-53-40.png">。<br>其中规则列表网址填入：</p><pre><code>https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</code></pre><p>然后点击下方的<strong>立即更新情景模式</strong>按钮，<strong>保存</strong>，更新完后，一定要点击左侧的<strong>应用选项</strong>，退出。</p><ul><li><p>点击proxy-switchchyomega图标，选择<strong>auto-switch</strong>模式，</p><img src="/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang/XSL_2018-11-02_23-11-32.png"></li><li><p>测试。在浏览器地址栏输入<em>google.com</em>或者<em>youtube.com</em>。回车，能访问说明成功了。</p></li></ul></li></ul><h2 id="说在在最后"><a href="#说在在最后" class="headerlink" title="说在在最后"></a>说在在最后</h2><ul><li>小飞机如果没有打开，并且proxy-switchchyomega选择了自动切换，那么访问没有被墙的网页能正常访问，被墙的网页则不能，所以一定要检查小飞机是否运行。</li><li>如果SSR选择的PAC模式，那么在<strong>系统设置</strong>-&gt;<strong>网络和Internet</strong>-&gt;<strong>代理</strong> 里会有一个代理脚本，如果发生无法访问任何网页，尝试关闭这个。<img src="/dian-nao/2018/11/03/dian-nao-shi-yong-ssr-ke-xue-shang-wang/dian-nao-shi-yong-ssr-ke-xue-shang-wang/XSL_2018-11-02_23-21-29.png"></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> --电脑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> --SSR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大创项目系列(一) OLED屏幕驱动</title>
      <link href="/enbedded-stm32/2018/10/15/da-chuang-xiang-mu-xi-lie-yi-oled-ping-mu-qu-dong/da-chuang-xiang-mu-xi-lie-yi-oled-ping-mu-qu-dong.html"/>
      <url>/enbedded-stm32/2018/10/15/da-chuang-xiang-mu-xi-lie-yi-oled-ping-mu-qu-dong/da-chuang-xiang-mu-xi-lie-yi-oled-ping-mu-qu-dong.html</url>
      
        <content type="html"><![CDATA[<h1 id="大创项目系列-一-OLED屏幕驱动"><a href="#大创项目系列-一-OLED屏幕驱动" class="headerlink" title="大创项目系列(一) OLED屏幕驱动"></a><strong>大创项目系列(一) OLED屏幕驱动</strong></h1><p>很久之前查阅资料，驱动过0.96寸OLED屏幕，现在将其移植到我的大创项目作调试信息输出显示，不太想用uart接口在电脑显示信息了，太浪费USB口了（第一次感觉到我的小本本USB口不够用）。</p><p>这个0.96寸OLED屏是使用7线制的，默认使用4线spi。接口定义如下：</p><ul><li>GND</li><li>VCC</li><li>D0(SPI_SCK)</li><li>D1(SPI_MOSI)</li><li>RES(屏幕复位)</li><li>DC(数据和命令控制管脚)</li><li>CS(设备片选)</li></ul><h2 id="底层函数—–实现复位，写命令，写数据"><a href="#底层函数—–实现复位，写命令，写数据" class="headerlink" title="##底层函数—–实现复位，写命令，写数据"></a>##底层函数—–实现复位，写命令，写数据</h2><h2 id="屏幕初始化函数"><a href="#屏幕初始化函数" class="headerlink" title="##屏幕初始化函数"></a>##屏幕初始化函数</h2><p>##像素绘制</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> -Enbedded -STM32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>驱动资料不详的LCD12864液晶屏</title>
      <link href="/embedded/2018/10/12/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping.html"/>
      <url>/embedded/2018/10/12/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping.html</url>
      
        <content type="html"><![CDATA[<h1 id="关于用C51驱动资料不详的LCD12864液晶屏"><a href="#关于用C51驱动资料不详的LCD12864液晶屏" class="headerlink" title="关于用C51驱动资料不详的LCD12864液晶屏"></a><strong>关于用C51驱动资料不详的LCD12864液晶屏</strong></h1><p>说来一片心酸泪，上学期大四毕业，新生广场有旧物买卖，闲逛一波，花了45块前买了一堆<strong>电子垃圾</strong>（手动滑稽），当时我还为此沾沾自喜，Arduino uno两块，Arduino mage一块，还有一堆外设，比如传感器，蓝牙什么的。。。。。简直超值。。。。。。。。可惜啊！！！！！！！好多没有资料的（要哭了有没有）(┬＿┬)(┬＿┬)(┬＿┬)(┬＿┬)〒▽〒。。。。。</p><p>比如这块LCD12864液晶屏，淘宝买二三十。。。。。。</p><p><img src="/embedded\2018\10\12\qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping\qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping\400719635787613860.jpg" alt="图一" width="450" height="600"></p><p><img src="/embedded\2018\10\12\qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping\qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping\316570050595151082.jpg" alt="图一" width="450" height="600"></p><p>突发奇想，想用一下。。。。。<strong>google</strong>了好久,终于找到看似是它的<a href="/embedded/2018/10/12/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/ST7565R_v1.7b.pdf" title="主控ST7565的数据手册">主控ST7565的数据手册</a>。。。。我也不知道是不是真的，看起来可信度挺高的。。。</p><img src="/embedded/2018/10/12/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/FPC692A引脚定义.png" title="FPC692A引脚定义"><img src="/embedded/2018/10/12/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/读写命令.png" title="读写命令"><img src="/embedded/2018/10/12/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/复位.png" title="复位"><img src="/embedded/2018/10/12/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/时序说明-1.png" title="时序说明"><img src="/embedded/2018/10/12/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/时序说明-2.png" title="时序说明"><img src="/embedded/2018/10/12/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/时序图.png" title="时序图"><p>##话不多说。。。。。。。。。结果不行。。。。。</p><a href="/embedded/2018/10/12/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/qu-dong-zi-liao-bu-xiang-de-lcd12864-ye-jing-ping/LCD12864.zip" title="SOURCE">SOURCE</a><h1 id="简直日了一条狗的感觉有没有"><a href="#简直日了一条狗的感觉有没有" class="headerlink" title="简直日了一条狗的感觉有没有"></a><strong>简直日了一条狗的感觉有没有</strong></h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> --Embedded </category>
          
      </categories>
      
      
        <tags>
            
            <tag> --C51 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建SSR</title>
      <link href="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr.html"/>
      <url>/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr.html</url>
      
        <content type="html"><![CDATA[<h1 id="搭建SSR教程"><a href="#搭建SSR教程" class="headerlink" title="搭建SSR教程"></a>搭建SSR教程</h1><hr><p>记录一下教程，以免找不着。</p><ol><li><p>购买海外VPS，我使用 <a href="https://www.vultr.com/" target="_blank" rel="noopener">vultr</a>，注册购买：</p><ul><li>节点选 <strong>新加坡</strong>，系统选CentOS 6 64位，不要选CentOS 7（带防火墙），套餐按需即可，开启IPV6，付款即可。</li></ul></li><li><p>本地远程连接服务器：</p><ul><li>使用<a href="https://www.netsarang.com/products/xsh_overview.html" target="_blank" rel="noopener">Xshell</a>连接，主机处填服务器IP，在Server-overview处都有，包括IP，登陆用户名，密码。</li></ul><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_13-56-04.png" title="xshelll连接"><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_13-58-46.png" title="登录信息"><ul><li>填入IP后点击连接，会弹出如下界面：</li></ul><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-02-55.png" title="填入用户名"><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-09-51.png" title="填入用户名"><p>填入先前Server-Overview显示的用户名，默认是<strong>root</strong>。如果没弹出此界面，而是显示如下信息，说明IP被墙，那就得再开一台服务器，vultr每开一台服务器收费0.01美元，每开一台，就是一个新IP，所以可以多开几台备用，选择能用的，然后删除剩余服务器即可。费用是按小时收费的。</p><p><strong>删除服务器：</strong></p><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-10-56.png" title="删除服务器"><ul><li>填入用户名，接着填入密码：</li></ul><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-16-58.png" title="填入密码"><ul><li>然后就会显示如下界面，说明连接成功：</li></ul><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-19-34.png" title="连接成功"></li></ol><p>3.连接成功后就可以安装SSR了：</p><p>输入以下命令：</p><pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssrmu.sh &amp;&amp; chmod +x ssrmu.sh &amp;&amp; bash ssrmu.sh</code></pre><p>快捷管理命令：</p><pre><code>bash ssrmu.sh</code></pre><p> 之后按提示完成安装。</p><p>4.安装BBR加速：</p><p>输入命令：</p><pre><code>wget -N --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; bash bbr.sh</code></pre><p>检查BBR是否安装成功：</p><pre><code>lsmod | grep bbr</code></pre><p>显示类似： <em>tcp_bbr 20480 15</em>，说明安装成功。</p><p>5.电脑端设置：</p><p>下载ShadowsocksR-win。</p><a href="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/ShadowsocksR-4.7.0-win.7z" title="ShadowsocksR-WIN">ShadowsocksR-WIN</a>。<br><br>解压后，双击打开<strong>ShadowsocksR-dotnet4.0.exe</strong>，复制ssr链接，然后选择<strong>从剪贴板导入</strong>。<br><br>或者手动设置服务器信息。<br><br>相关设置按需选择即可。<br><br>6.(Chrome)浏览器设置：<br><br>为了方便管理代理，使用插件 SwitchyOmega <a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="noopener">[Chrome APP商店]</a>，<a href="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/chromeFOR.COM_proxy-switchyomega_v2.5.20.crx" title="[本地下载]">[本地下载]</a>。<br><br>安装完成后进行如下操作：<br><br>(1). 新建情景模式，类型选<strong>代理服务器</strong>。按如下填写：<br><br><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-40-16.png" title="代理服务器模式"><p>(2). 新建情景模式，类型选<strong>自动切换模式</strong>，按如下填写：</p><p>规则列表网址填：</p><pre><code>https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</code></pre><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-43-42.png" title="自动切换模式">    <p>！！！！填完点击下方的按钮 <strong>立即更新情景模式</strong>。退出前不要忘记<strong>保存</strong>，点击左侧的<strong>应用选项</strong>。</p><p>！！！！填完点击下方的按钮 <strong>立即更新情景模式</strong>。退出前不要忘记<strong>保存</strong>，点击左侧的<strong>应用选项</strong>。</p><p>！！！！填完点击下方的按钮 <strong>立即更新情景模式</strong>。退出前不要忘记<strong>保存</strong>，点击左侧的<strong>应用选项</strong>。</p><p>最后选择<strong>自动切换模式</strong>。</p><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-49-14.png" title="选择自动切换模式"><p>打开<em>google.com</em>测试。</p><p>参考链接：</p><p><a href="https://doub.io/ss-jc60/" target="_blank" rel="noopener">doubi</a></p><p><a href="https://github.com/shadowsocks/shadowsocks-windows/issues/1709" target="_blank" rel="noopener">shadowsocks-windows</a></p><p><a href="https://github.com/ToyoDAdoubi/doubi" target="_blank" rel="noopener">一个逗比写的各种逗比脚本</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> --电脑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> --SSR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑开启卓越性能</title>
      <link href="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng.html"/>
      <url>/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng.html</url>
      
        <content type="html"><![CDATA[<h1 id="win10系统（版本号在1803以上）开启性能模式"><a href="#win10系统（版本号在1803以上）开启性能模式" class="headerlink" title="win10系统（版本号在1803以上）开启性能模式"></a>win10系统（版本号在1803以上）开启性能模式</h1><p>win10升级到1803后，微软将电源管理现在的“性能模式”等同于原先的“平衡模式”，所以想要更好的发挥电脑性能，就要开启隐藏的卓越模式。</p><ul><li>以“管理员身份”运行<em>Windows shell</em>。</li></ul><img src="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng/XSL_2018-10-06_12-36-00.png"><ul><li>输入命令 <strong>powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61</strong>，回车，等一会，就会提示开启卓越模式（序列号不同，我也不清楚怎么回事）了。</li></ul><img src="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng/XSL_2018-10-06_12-38-26.png"><ul><li>打开<em>控制面板</em>，进入<em>电源选项</em>，或者在地址栏输入 <strong>控制面板\所有控制面板项\电源选项</strong>，就会发现多了一个<strong>卓越性能</strong>选项，开启它即可。</li></ul><img src="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng/XSL_2018-10-06_13-03-53.png"> <p>###以下是几个模式对比：</p><p>1.卓越模式：</p><img src="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng/XSL_2018-10-06_13-07-47.png"><p>2.性能模式：</p><img src="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng/XSL_2018-10-06_13-08-46.png"><p>3.平衡模式：</p><img src="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng/XSL_2018-10-06_13-09-23.png"><p>4节能模式：</p><img src="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng/XSL_2018-10-06_13-10-21.png"><p><strong>开启卓越模式，注意散热。</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> --电脑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> --电脑技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C51-LCD1602</title>
      <link href="/embedded/2018/10/05/c51-lcd1602/c51-lcd1602.html"/>
      <url>/embedded/2018/10/05/c51-lcd1602/c51-lcd1602.html</url>
      
        <content type="html"><![CDATA[<h1 id="STC12C5A60S2调试LCD1602"><a href="#STC12C5A60S2调试LCD1602" class="headerlink" title="STC12C5A60S2调试LCD1602"></a><strong>STC12C5A60S2调试LCD1602</strong></h1><p>国庆假期，闲来无事，突然想起我还有几片<em><a href="http://stcmcu.com/" target="_blank" rel="noopener">STC12C5A60S2</a> [<a href="http://www.stcmcudata.com/datasheet/stc/STC-AD-PDF/STC12C5A60S2.pdf" target="_blank" rel="noopener">datasheet</a>]</em>，还有一片<em><a href="http://stcmcu.com/" target="_blank" rel="noopener">STC12L5A60S2</a> [<a href="http://www.stcmcudata.com/datasheet/stc/STC-AD-PDF/STC12C5A60S2.pdf" target="_blank" rel="noopener">datasheet</a>]</em>,对了，还有两片<em><a href="http://stcmcu.com/" target="_blank" rel="noopener">STC15FWA60S2</a> [<a href="">datashet</a>]</em>，其实，根据STC系列单片机命名方法，STCC5A60S2和STC12L5A60S2是一样的，只是供电电压有所不同，“C5”代表供电电压是5V，“L5”代表供电电压是3.3v的。芯片最高频率和芯片引脚的速度也有所不同。还有几片LCD1602，想来很久之前，没能驱动成功，这次再次发起挑战。</p><ul><li><p><strong>LCD1602接口定义：</strong></p><p>1.RS——寄存器选择输入端</p><ul><li>RS=1：指向数据寄存器</li><li>RS=0：指向指令寄存器</li></ul><p>2.RW——读写控制输入端    </p><ul><li>RW=1：读操作</li><li>RW=0：写操作</li></ul><p>3.E（EN）使能端</p><ul><li>读操作时，高电平有效</li><li>写操作时，下降沿有效</li></ul><p>4.D0-D7：数据输入输出端</p></li><li><p><strong>LCD1602操作时序图：</strong></p></li><li><p><strong>底层函数</strong></p><p>1.使能函数(必须使能LCD1602才能执行命令)  </p></li></ul><pre class="line-numbers language-c"><code class="language-c">    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_pulseEnable</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            LCD_EN<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token function">Delay_us</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        LCD_EN<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token function">Delay_us</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        LCD_EN<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token function">Delay_us</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//    LCD_EN=1;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 2.IO口操作函数</p><pre class="line-numbers language-c"><code class="language-c">    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_write4bits</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>        DP<span class="token operator">=</span>value<span class="token operator">&amp;</span><span class="token number">0xf0</span><span class="token punctuation">;</span>        <span class="token function">LCD_pulseEnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_write8bits</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>        DP<span class="token operator">=</span>value<span class="token operator">&amp;</span><span class="token number">0xff</span><span class="token punctuation">;</span>        <span class="token function">LCD_pulseEnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 3.数据输出函数</p><pre class="line-numbers language-c"><code class="language-c">    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">LCD_send</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> value<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> mode<span class="token punctuation">)</span><span class="token punctuation">{</span>        LCD_RW<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token function">Delay_us</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        LCD_RS<span class="token operator">=</span>mode<span class="token punctuation">;</span>        LCD_RW<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>displayFunction<span class="token operator">&amp;</span>LCD_8BITMODE<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">LCD_write8bits</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token function">LCD_write4bits</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">LCD_write4bits</span><span class="token punctuation">(</span>value<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        LCD_RW<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        LCD_RS<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">!</span>mode<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 4.写命令</p><pre class="line-numbers language-c"><code class="language-c">    <span class="token keyword">void</span> <span class="token function">LCD_Command</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">LCD_send</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> W_COMMAND<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p> 5.写数据</p><pre class="line-numbers language-c"><code class="language-c">    <span class="token keyword">char</span> <span class="token function">LCD_Write</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">LCD_send</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> W_DATA<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><strong>硬件抽象层函数</strong></p><p>1.初始化函数</p><ul><li>初始化行数和列数</li></ul></li></ul><pre class="line-numbers language-c"><code class="language-c">        <span class="token keyword">void</span> <span class="token function">LCD_Begin</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> cols<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> lines<span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">unsigned</span> <span class="token keyword">char</span> dotsize<span class="token operator">=</span>LCD_5x8DOTS<span class="token punctuation">;</span>            <span class="token function">pinInit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> PIN_MODE_OP<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">portInit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">portInit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>lines <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            displayFunction <span class="token operator">|</span><span class="token operator">=</span> LCD_2LINE<span class="token punctuation">;</span>          <span class="token punctuation">}</span>          numLines <span class="token operator">=</span> lines<span class="token punctuation">;</span>            lcdCol<span class="token operator">=</span>cols<span class="token punctuation">;</span>          <span class="token function">LCD_SetRowOffsets</span><span class="token punctuation">(</span><span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x00</span> <span class="token operator">+</span> cols<span class="token punctuation">,</span> <span class="token number">0x40</span> <span class="token operator">+</span> cols<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// for some 1 line displays you can select a 10 pixel high font</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>dotsize <span class="token operator">!=</span> LCD_5x8DOTS<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>lines <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            displayFunction <span class="token operator">|</span><span class="token operator">=</span> LCD_5x10DOTS<span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token comment" spellcheck="true">// SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!</span>          <span class="token comment" spellcheck="true">// according to datasheet, we need at least 40ms after power rises above 2.7V</span>          <span class="token comment" spellcheck="true">// before sending commands. Arduino can turn on way before 4.5V so we'll wait 50</span>          <span class="token function">Delay_ms</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             LCD_RS<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>            LCD_EN<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>          LCD_RW<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//put the LCD into 4 bit or 8 bit mode</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>displayFunction <span class="token operator">&amp;</span> LCD_8BITMODE<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// this is according to the hitachi HD44780 datasheet</span>            <span class="token comment" spellcheck="true">// figure 24, pg 46</span>            <span class="token comment" spellcheck="true">// we start in 8bit mode, try to set 4 bit mode</span>            <span class="token function">LCD_write4bits</span><span class="token punctuation">(</span><span class="token number">0x03</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//    delayMicroseconds(4500); // wait min 4.1ms</span>                <span class="token function">Delay_us</span><span class="token punctuation">(</span><span class="token number">4500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// second try</span>            <span class="token function">LCD_write4bits</span><span class="token punctuation">(</span><span class="token number">0x03</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//    delayMicroseconds(4500); // wait min 4.1ms</span>            <span class="token function">Delay_us</span><span class="token punctuation">(</span><span class="token number">4500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// third go!</span>            <span class="token function">LCD_write4bits</span><span class="token punctuation">(</span><span class="token number">0x03</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//    delayMicroseconds(150);</span>                <span class="token function">Delay_us</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// finally, set to 4-bit interface</span>            <span class="token function">LCD_write4bits</span><span class="token punctuation">(</span><span class="token number">0x02</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// this is according to the hitachi HD44780 datasheet</span>            <span class="token comment" spellcheck="true">// page 45 figure 23</span>            <span class="token comment" spellcheck="true">// Send function set command sequence</span>            <span class="token function">LCD_Command</span><span class="token punctuation">(</span>LCD_FUNCTIONSET <span class="token operator">|</span> displayFunction<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//    delayMicroseconds(4500);  // wait more than 4.1ms</span>                <span class="token function">Delay_us</span><span class="token punctuation">(</span><span class="token number">4500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// second try</span>            <span class="token function">LCD_Command</span><span class="token punctuation">(</span>LCD_FUNCTIONSET <span class="token operator">|</span> displayFunction<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//    delayMicroseconds(150);</span>                <span class="token function">Delay_us</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// third go</span>            <span class="token function">LCD_Command</span><span class="token punctuation">(</span>LCD_FUNCTIONSET <span class="token operator">|</span> displayFunction<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token comment" spellcheck="true">// finally, set # lines, font size, etc.</span>          <span class="token function">LCD_Command</span><span class="token punctuation">(</span>LCD_FUNCTIONSET <span class="token operator">|</span> displayFunction<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// turn the display on with no cursor or blinking default</span>          displayControl <span class="token operator">=</span> LCD_DISPLAYON <span class="token operator">|</span> LCD_CURSOROFF <span class="token operator">|</span> LCD_BLINKOFF<span class="token punctuation">;</span>            <span class="token function">LCD_Display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">// clear it off</span>          <span class="token function">LCD_Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">// Initialize to default text direction (for romance languages)</span>          displayMode <span class="token operator">=</span> LCD_ENTRYLEFT <span class="token operator">|</span> LCD_ENTRYSHIFTDECREMENT<span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">// set the entry mode</span>          <span class="token function">LCD_Command</span><span class="token punctuation">(</span>LCD_ENTRYMODESET <span class="token operator">|</span> displayMode<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>初始化数据线(四线制或八线制)</li></ul><pre class="line-numbers language-c"><code class="language-c">    <span class="token keyword">void</span> <span class="token function">LCD_Init</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> fourbitmode<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>fourbitmode<span class="token punctuation">)</span>            displayFunction <span class="token operator">=</span> LCD_4BITMODE <span class="token operator">|</span> LCD_1LINE <span class="token operator">|</span> LCD_5x8DOTS<span class="token punctuation">;</span>          <span class="token keyword">else</span>                 displayFunction <span class="token operator">=</span> LCD_8BITMODE <span class="token operator">|</span> LCD_1LINE <span class="token operator">|</span> LCD_5x8DOTS<span class="token punctuation">;</span>        <span class="token function">LCD_Begin</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 2.在指定位置显示一个字节</p><pre class="line-numbers language-c"><code class="language-c">    <span class="token keyword">void</span> <span class="token function">LCD_DisplayChr</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> col<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> row<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">LCD_SetCursor</span><span class="token punctuation">(</span>col<span class="token punctuation">,</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">LCD_Write</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 3.在指定位置显示字符串</p><pre class="line-numbers language-c"><code class="language-c">    <span class="token keyword">void</span> <span class="token function">LCD_DisplayStr</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> col<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span>     row<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> code<span class="token operator">*</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">unsigned</span> <span class="token keyword">char</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>=</span><span class="token number">0x20</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">LCD_DisplayChr</span><span class="token punctuation">(</span>col<span class="token operator">+</span>i<span class="token punctuation">,</span> row<span class="token punctuation">,</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Delay_us</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">></span><span class="token punctuation">(</span>lcdCol<span class="token operator">-</span>col<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>numLines<span class="token operator">-</span>row<span class="token punctuation">)</span><span class="token operator">>=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">LCD_DisplayChr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">-</span>lcdCol<span class="token operator">+</span>col<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> row<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">Delay_us</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            i<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><strong>测试</strong></p><p>在<em>main.c</em>文件</p></li></ul><pre class="line-numbers language-c"><code class="language-c">    <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">unsigned</span> <span class="token keyword">char</span> i<span class="token punctuation">,</span>len<span class="token operator">=</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>        P00<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token function">Delay_ms</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        P00<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token function">LCD_Init</span><span class="token punctuation">(</span>LINES_4<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">LCD_Begin</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">LCD_Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">LCD_SetCursor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">LCD_DisplayChr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">Delay_ms</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">LCD_DisplayChr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Delay_ms</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">LCD_DisplayChr</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Delay_ms</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">LCD_DisplayChr</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'D'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Delay_ms</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">LCD_DisplayChr</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'E'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">Delay_ms</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">LCD_DisplayChr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'F'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">Delay_ms</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">LCD_DisplayChr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'G'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">LCD_DisplayStr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//通过</span>    <span class="token comment" spellcheck="true">//    LCD_DisplayStr(0, 1, "test,LCD!";        //通过</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/embedded/2018/10/05/c51-lcd1602/c51-lcd1602/739507439392664788.jpg" title="测试图"><img src="/embedded/2018/10/05/c51-lcd1602/c51-lcd1602/739507439392664788.jpg" width="350" height="700" title="测试图"><p><img src="/embedded/2018/10/05/c51-lcd1602/c51-lcd1602/739507439392664788.jpg" alt="ceshitu" width="300" height="150"></p><p><strong><a href="embedded/2018/10/05/c51-lcd1602/c51-lcd1602/code.zip">源码文件</a></strong>    </p><a href="/embedded/2018/10/05/c51-lcd1602/c51-lcd1602/code.zip" title="源码文件">源码文件</a><p>2018/10/6 22:17:54 2018/10/6 22:17:55 </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> --Embedded </category>
          
      </categories>
      
      
        <tags>
            
            <tag> --C51 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My First Blogs</title>
      <link href="/uncategorized/2018/10/04/my-first-blogs/my-first-blogs.html"/>
      <url>/uncategorized/2018/10/04/my-first-blogs/my-first-blogs.html</url>
      
        <content type="html"><![CDATA[<h1 id="一件有意义的事"><a href="#一件有意义的事" class="headerlink" title="一件有意义的事"></a><strong>一件有意义的事</strong></h1><hr><p>这是我的第一篇博客，昨晚和林式说了之后，我问她,你猜我要写什么?她说，这是我的第一篇博客，应该记录一些有意义的事。其实我早已想好。</p><p>我之前在<em>Aigirl</em>看到一篇连载，《我想做能在你的葬礼上描述你一生的人》。有个评论：</p><p><img src="/images/My-First-Blogs/20181004134415.jpg" alt="wChat"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> none </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
