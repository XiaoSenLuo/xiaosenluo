<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>搭建SSR</title>
      <link href="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr.html"/>
      <url>/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr.html</url>
      
        <content type="html"><![CDATA[<h1 id="搭建SSR教程"><a href="#搭建SSR教程" class="headerlink" title="搭建SSR教程"></a>搭建SSR教程</h1><hr><p>记录一下教程，以免找不着。</p><ol><li><p>购买海外VPS，我使用 <a href="https://www.vultr.com/" target="_blank" rel="noopener">vultr</a>，注册购买：</p><ul><li>节点选 <strong>新加坡</strong>，系统选CentOS 6 64位，不要选CentOS 7（带防火墙），套餐按需即可，开启IPV6,，付款即可。</li></ul></li><li><p>本地远程连接服务器：</p><ul><li>使用<a href="https://www.netsarang.com/products/xsh_overview.html" target="_blank" rel="noopener">Xshell</a>连接，主机处填服务器IP，在Server-overview处都有，包括IP，登陆用户名，密码。</li></ul><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_13-56-04.png" title="xshelll连接"><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_13-58-46.png" title="登录信息"><ul><li>填入IP后点击连接，会弹出如下界面：</li></ul><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-02-55.png" title="填入用户名"><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-09-51.png" title="填入用户名"><p>填入先前Server-Overview显示的用户名，默认是<strong>root</strong>。如果没弹出此界面，而是显示如下信息，说明IP被墙，那就得再开一台服务器，vultr每开一台服务器收费0.01美元，每开一台，就是一个新IP，所以可以多开几台备用，选择能用的，然后删除剩余服务器即可。费用是按小时收费的。</p><p><strong>删除服务器：</strong></p><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-10-56.png" title="删除服务器"><ul><li>填入用户名，接着填入密码：</li></ul><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-16-58.png" title="填入密码"><ul><li>然后就会显示如下界面，说明连接成功：</li></ul><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-19-34.png" title="连接成功"></li></ol><p>3.连接成功后就可以安装SSR了：</p><p>输入以下命令：</p><pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssrmu.sh &amp;&amp; chmod +x ssrmu.sh &amp;&amp; bash ssrmu.sh</code></pre><p>快捷管理命令：</p><pre><code>bash ssrmu.sh</code></pre><p> 之后按提示完成安装。</p><p>4.安装BBR加速：</p><p>输入命令：</p><pre><code>wget -N --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; bash bbr.sh</code></pre><p>检查BBR是否安装成功：</p><pre><code>lsmod | grep bbr</code></pre><p>显示类似： <em>tcp_bbr 20480 15</em>，说明安装成功。</p><p>5.电脑端设置：</p><p>下载ShadowsocksR-win。</p><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/ShadowsocksR-4.7.0-win.7z" title="ShadowsocksR-win">。<br><br>解压后，双击打开<strong>ShadowsocksR-dotnet4.0.exe</strong>，复制ssr链接，然后选择<strong>从剪贴板导入</strong>。<br><br>或者手动设置服务器信息。<br><br>相关设置按需选择即可。<br><br>6.(Chrome)浏览器设置：<br><br>为了方便管理代理，使用插件 SwitchyOmega <a href="https://chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="noopener">[Chrome APP商店]</a>，<a href="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/chromeFOR.COM_proxy-switchyomega_v2.5.20.crx" title="[本地下载]">[本地下载]</a>。<br><br>安装完成后进行如下操作：<br><br>(1). 新建情景模式，类型选<strong>代理服务器</strong>。按如下填写：<br><br><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-40-16.png" title="代理服务器模式"><p>(2). 新建情景模式，类型选<strong>自动切换模式</strong>，按如下填写：</p><p>规则列表网址填：</p><pre><code>https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</code></pre><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-43-42.png" title="自动切换模式">    <p>！！！！填完点击下方的按钮 <strong>立即更新情景模式</strong>。退出前不要忘记<strong>保存</strong>，点击左侧的<strong>应用选项</strong>。</p><p>！！！！填完点击下方的按钮 <strong>立即更新情景模式</strong>。退出前不要忘记<strong>保存</strong>，点击左侧的<strong>应用选项</strong>。</p><p>！！！！填完点击下方的按钮 <strong>立即更新情景模式</strong>。退出前不要忘记<strong>保存</strong>，点击左侧的<strong>应用选项</strong>。</p><p>最后选择<strong>自动切换模式</strong>。</p><img src="/dian-nao/2018/10/07/da-jian-ssr/da-jian-ssr/XSL_2018-10-07_14-49-14.png" title="选择自动切换模式"><p>打开<em>google.com</em>测试。</p><p>参考链接：</p><p><a href="https://doub.io/ss-jc60/" target="_blank" rel="noopener">doubi</a></p><p><a href="https://github.com/shadowsocks/shadowsocks-windows/issues/1709" target="_blank" rel="noopener">shadowsocks-windows</a></p><p><a href="https://github.com/ToyoDAdoubi/doubi" target="_blank" rel="noopener">一个逗比写的各种逗比脚本</a></p>]]></content>
      
      
      <categories>
          
          <category> --电脑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> --SSR </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>电脑开启卓越性能</title>
      <link href="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng.html"/>
      <url>/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng.html</url>
      
        <content type="html"><![CDATA[<h1 id="win10系统（版本号在1803以上）开启性能模式"><a href="#win10系统（版本号在1803以上）开启性能模式" class="headerlink" title="win10系统（版本号在1803以上）开启性能模式"></a>win10系统（版本号在1803以上）开启性能模式</h1><p>win10升级到1803后，微软将电源管理现在的“性能模式”等同于原先的“平衡模式”，所以想要更好的发挥电脑性能，就要开启隐藏的卓越模式。</p><ul><li>以“管理员身份”运行<em>Windows shell</em>。</li></ul><img src="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng/XSL_2018-10-06_12-36-00.png"><ul><li>输入命令 <strong>powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61</strong>，回车，等一会，就会提示开启卓越模式（序列号不同，我也不清楚怎么回事）了。</li></ul><img src="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng/XSL_2018-10-06_12-38-26.png"><ul><li>打开<em>控制面板</em>，进入<em>电源选项</em>，或者在地址栏输入 <strong>控制面板\所有控制面板项\电源选项</strong>，就会发现多了一个<strong>卓越性能</strong>选项，开启它即可。</li></ul><img src="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng/XSL_2018-10-06_13-03-53.png"> <p>###以下是几个模式对比：</p><p>1.卓越模式：</p><img src="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng/XSL_2018-10-06_13-07-47.png"><p>2.性能模式：</p><img src="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng/XSL_2018-10-06_13-08-46.png"><p>3.平衡模式：</p><img src="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng/XSL_2018-10-06_13-09-23.png"><p>4节能模式：</p><img src="/dian-nao/2018/10/06/dian-nao-kai-qi-zhuo-yue-xing-neng/dian-nao-kai-qi-zhuo-yue-xing-neng/XSL_2018-10-06_13-10-21.png"><p><strong>开启卓越模式，注意散热。</strong></p>]]></content>
      
      
      <categories>
          
          <category> --电脑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> --电脑技巧 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C51-LCD1602</title>
      <link href="/embedded/2018/10/05/c51-lcd1602/c51-lcd1602.html"/>
      <url>/embedded/2018/10/05/c51-lcd1602/c51-lcd1602.html</url>
      
        <content type="html"><![CDATA[<h1 id="STC12C5A60S2调试LCD1602"><a href="#STC12C5A60S2调试LCD1602" class="headerlink" title="STC12C5A60S2调试LCD1602"></a><strong>STC12C5A60S2调试LCD1602</strong></h1><p>国庆假期，闲来无事，突然想起我还有几片<em><a href="http://stcmcu.com/" target="_blank" rel="noopener">STC12C5A60S2</a> [<a href="http://www.stcmcudata.com/datasheet/stc/STC-AD-PDF/STC12C5A60S2.pdf" target="_blank" rel="noopener">datasheet</a>]</em>，还有一片<em><a href="http://stcmcu.com/" target="_blank" rel="noopener">STC12L5A60S2</a> [<a href="http://www.stcmcudata.com/datasheet/stc/STC-AD-PDF/STC12C5A60S2.pdf" target="_blank" rel="noopener">datasheet</a>]</em>,对了，还有两片<em><a href="http://stcmcu.com/" target="_blank" rel="noopener">STC15FWA60S2</a> [<a href="">datashet</a>]</em>，其实，根据STC系列单片机命名方法，STCC5A60S2和STC12L5A60S2是一样的，只是供电电压有所不同，“C5”代表供电电压是5V，“L5”代表供电电压是3.3v的。芯片最高频率和芯片引脚的速度也有所不同。还有几片LCD1602，想来很久之前，没能驱动成功，这次再次发起挑战。</p><ul><li><p><strong>LCD1602接口定义：</strong></p><p>1.RS——寄存器选择输入端</p><ul><li>RS=1：指向数据寄存器</li><li>RS=0：指向指令寄存器</li></ul><p>2.RW——读写控制输入端    </p><ul><li>RW=1：读操作</li><li>RW=0：写操作</li></ul><p>3.E（EN）使能端</p><ul><li>读操作时，高电平有效</li><li>写操作时，下降沿有效</li></ul><p>4.D0-D7：数据输入输出端</p></li><li><p><strong>LCD1602操作时序图：</strong></p></li><li><p><strong>底层函数</strong></p><p>1.使能函数(必须使能LCD1602才能执行命令)  </p></li></ul><pre><code>static void LCD_pulseEnable(void){LCD_EN=0;Delay_us(10);LCD_EN=1;Delay_us(10);LCD_EN=0;Delay_us(10);&#x2F;&#x2F;LCD_EN=1;}</code></pre><p> 2.IO口操作函数</p><pre><code>static void LCD_write4bits(unsigned char value){DP=value&amp;0xf0;LCD_pulseEnable();}static void LCD_write8bits(unsigned char value){DP=value&amp;0xff;LCD_pulseEnable();}</code></pre><p> 3.数据输出函数</p><pre><code>static void LCD_send(unsigned char value, unsigned char mode){LCD_RW=1;Delay_us(10);LCD_RS=mode;LCD_RW=0;if(displayFunction&amp;LCD_8BITMODE){LCD_write8bits(value);}else{LCD_write4bits((value));LCD_write4bits(value&lt;&lt;4);}LCD_RW=1;LCD_RS=(!mode);}</code></pre><p> 4.写命令</p><pre><code>{% codeblock lang:html %}<head> <link rel="stylesheet" href="css/lightgallery.css">  <link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css"><link rel="stylesheet" href="/css/prism-line-numbers.css" type="text/css"></head>{% endcodeblock %}</code></pre><pre><code>void LCD_Command(unsigned char value){LCD_send(value, W_COMMAND);}</code></pre><p> 5.写数据</p><pre><code>char LCD_Write(unsigned char value){LCD_send(value, W_DATA);return 1;}</code></pre><ul><li><p><strong>硬件抽象层函数</strong></p><p>1.初始化函数</p><ul><li>初始化行数和列数</li></ul></li></ul><pre><code>void LCD_Begin(unsigned char cols, unsigned char lines){  unsigned char dotsize=LCD_5x8DOTS;pinInit(0, 0, PIN_MODE_OP);portInit(1);portInit(2);  if (lines &gt; 1) {    displayFunction |= LCD_2LINE;  }  numLines = lines;lcdCol=cols;  LCD_SetRowOffsets(0x00, 0x40, 0x00 + cols, 0x40 + cols);    &#x2F;&#x2F; for some 1 line displays you can select a 10 pixel high font  if ((dotsize != LCD_5x8DOTS) &amp;&amp; (lines == 1)) {    displayFunction |= LCD_5x10DOTS;  }  &#x2F;&#x2F; SEE PAGE 45&#x2F;46 FOR INITIALIZATION SPECIFICATION!  &#x2F;&#x2F; according to datasheet, we need at least 40ms after power rises above 2.7V  &#x2F;&#x2F; before sending commands. Arduino can turn on way before 4.5V so we&#39;ll wait 50  Delay_ms(5); LCD_RS=0;LCD_EN=0;  LCD_RW=0;  &#x2F;&#x2F;put the LCD into 4 bit or 8 bit mode  if (!(displayFunction &amp; LCD_8BITMODE)){    &#x2F;&#x2F; this is according to the hitachi HD44780 datasheet    &#x2F;&#x2F; figure 24, pg 46    &#x2F;&#x2F; we start in 8bit mode, try to set 4 bit mode    LCD_write4bits(0x03);&#x2F;&#x2F;    delayMicroseconds(4500); &#x2F;&#x2F; wait min 4.1msDelay_us(4500);    &#x2F;&#x2F; second try    LCD_write4bits(0x03);&#x2F;&#x2F;    delayMicroseconds(4500); &#x2F;&#x2F; wait min 4.1ms    Delay_us(4500);    &#x2F;&#x2F; third go!    LCD_write4bits(0x03); &#x2F;&#x2F;    delayMicroseconds(150);Delay_us(150);    &#x2F;&#x2F; finally, set to 4-bit interface    LCD_write4bits(0x02);   }else{    &#x2F;&#x2F; this is according to the hitachi HD44780 datasheet    &#x2F;&#x2F; page 45 figure 23    &#x2F;&#x2F; Send function set command sequence    LCD_Command(LCD_FUNCTIONSET | displayFunction);&#x2F;&#x2F;    delayMicroseconds(4500);  &#x2F;&#x2F; wait more than 4.1msDelay_us(4500);    &#x2F;&#x2F; second try    LCD_Command(LCD_FUNCTIONSET | displayFunction);&#x2F;&#x2F;    delayMicroseconds(150);Delay_us(150);    &#x2F;&#x2F; third go    LCD_Command(LCD_FUNCTIONSET | displayFunction);  }  &#x2F;&#x2F; finally, set # lines, font size, etc.  LCD_Command(LCD_FUNCTIONSET | displayFunction);    &#x2F;&#x2F; turn the display on with no cursor or blinking default  displayControl = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;    LCD_Display();  &#x2F;&#x2F; clear it off  LCD_Clear();  &#x2F;&#x2F; Initialize to default text direction (for romance languages)  displayMode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;  &#x2F;&#x2F; set the entry mode  LCD_Command(LCD_ENTRYMODESET | displayMode);}</code></pre><ul><li>初始化数据线(四线制或八线制)</li></ul><pre><code>void LCD_Init(unsigned char fourbitmode){if(fourbitmode)    displayFunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;  else     displayFunction = LCD_8BITMODE | LCD_1LINE | LCD_5x8DOTS;      LCD_Begin(16, 1);  }</code></pre><p> 2.在指定位置显示一个字节</p><pre><code>void LCD_DisplayChr(unsigned char col, unsigned char row, unsigned char value){LCD_SetCursor(col,row);LCD_Write(value);}</code></pre><p> 3.在指定位置显示字符串</p><pre><code>void LCD_DisplayStr(unsigned char col, unsigned char     row, unsigned char code* str){unsigned char i=0;while(str[i]&gt;=0x20){LCD_DisplayChr(col+i, row, str[i]);Delay_us(10);if(i&gt;(lcdCol-col) &amp;&amp; ((numLines-row)&gt;=1)){LCD_DisplayChr((i-lcdCol+col-1), row+1, str[i]);Delay_us(10);}i++;}}</code></pre><ul><li><p><strong>测试</strong></p><p>在<em>main.c</em>文件</p></li></ul><pre><code>void main(void){unsigned char i,len=sizeof(t);P00=0;Delay_ms(1000);P00=1;LCD_Init(LINES_4);LCD_Begin(16, 2);LCD_Clear();LCD_SetCursor(0,0);LCD_DisplayChr(0, 0, &#39;A&#39;);Delay_ms(100);LCD_DisplayChr(1, 0, &#39;B&#39;);Delay_ms(100);LCD_DisplayChr(2, 0, &#39;C&#39;);Delay_ms(100);LCD_DisplayChr(3, 0, &#39;D&#39;);Delay_ms(100);LCD_DisplayChr(4, 0, &#39;E&#39;);Delay_ms(100);LCD_DisplayChr(0, 1, &#39;F&#39;);Delay_ms(100);LCD_DisplayChr(1, 1, &#39;G&#39;);LCD_DisplayStr(0, 1, t);&#x2F;&#x2F;通过&#x2F;&#x2F;LCD_DisplayStr(0, 1, &quot;test,LCD!&quot;;&#x2F;&#x2F;通过while(1);}</code></pre><p><strong><a href="embedded/2018/10/05/c51-lcd1602/c51-lcd1602/code.zip">源码文件</a></strong>    </p><a href="/embedded/2018/10/05/c51-lcd1602/c51-lcd1602/code.zip" title="源码文件">源码文件</a><p>2018/10/6 22:17:54 2018/10/6 22:17:55 </p>]]></content>
      
      
      <categories>
          
          <category> --Embedded </category>
          
      </categories>
      
      
        <tags>
            
            <tag> --C51 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>My First Blogs</title>
      <link href="/uncategorized/2018/10/04/my-first-blogs/my-first-blogs.html"/>
      <url>/uncategorized/2018/10/04/my-first-blogs/my-first-blogs.html</url>
      
        <content type="html"><![CDATA[<h1 id="一件有意义的事"><a href="#一件有意义的事" class="headerlink" title="一件有意义的事"></a><strong>一件有意义的事</strong></h1><hr><p>这是我的第一篇博客，昨晚和林式说了之后，我问她,你猜我要写什么?她说，这是我的第一篇博客，应该记录一些有意义的事。其实我早已想好。</p><p>我之前在<em>Aigirl</em>看到一篇连载，《我想做能在你的葬礼上描述你一生的人》。有个评论：</p><p><img src="/images/My-First-Blogs/20181004134415.jpg" alt="wChat"></p>]]></content>
      
      
      
        <tags>
            
            <tag> none </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
